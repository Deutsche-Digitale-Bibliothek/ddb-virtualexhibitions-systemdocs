{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Stand: 26.08.2020 Version: 3.0.0 DDB Studio Installations- & Instandhaltungs-Handbuch \u00b6 Nomenklatur \u00b6 DDB Studio \u00b6 DDB Studio besteht technisch aus zwei Komponenten, zum einen aus dem Omeka Multiinstanz Manager und zum anderen aus der angepassten Version von Omeka . Je nach Servertyp werden diese Komponenten unterschiedlich installiert und aktualisiert. Omeka Multiinstanz Manager - OMIM \u00b6 OMIM erm\u00f6glicht das Bereitstellen, die Verwaltung und Ver\u00f6ffentlichung von einzelnen virtuellen Ausstellungen d.h. von Omeka Instanzen. Dar\u00fcber hinaus k\u00f6nnen in OMIM Benutzer, Farbpaletten etc. der Ausstellungen verwaltet werden. Das Repository bei github hei\u00dft ddb-virtualexhibitions-manager und findet sich unter https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions-manager Omeka \u00b6 F\u00fcr die virtuellen Ausstellungen der DDB angepasste Version von Omeka. Das Repository bei github hei\u00dft ddb-virtualexhibitions und findet sich unter https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions Servertypen \u00b6 Redaktionsserver \u00b6 Bezeichnet Server, auf denen die DDB-Studio-Redaktion neue Ausstellungen anlegt, bearbeitet oder l\u00f6scht und von denen aus sie Ausstellungen auf den Ausspielungsservern ver\u00f6ffentlicht. Die Ausstellungen werden vor der Ver\u00f6ffentlichung hier von Kuratoren bearbeitet. Auf diesen Servern sind die zwei Komponenten von DDB Studio vollst\u00e4ndig installiert. In diesem Handbuch wird, f\u00fcr Beispiele und Erl\u00e4uterungen, der Redaktionsserver mit der Beispieldom\u00e4ne redaktion.tld gleichgesetzt. Ausspielungsserver \u00b6 Bezeichnet Server, die zum Anzeigen der Ausstellungen f\u00fcr die Besucher dienen. Ausstellungen werden vom jeweiligen Redaktionsserver bei der Ver\u00f6ffentlichung automatisch hierhin \u00fcbertragen. Auf diesen Servern ist die Omeka-Komponente vollst\u00e4ndig installiert, w\u00e4hrend von OMIM nur einzelne, spezielle Dateien installiert sind. In diesem Handbuch werden, f\u00fcr Beispiele und Erl\u00e4uterungen, die Ausspielungsserver mit den Beispieldom\u00e4nen live.tld sowie live-two.tld gleichgesetzt. Produktionsserver \u00b6 Bezeichnet Server, die der \u00d6ffentlichkeit (Kuratoren oder Besuchern) zug\u00e4nglich sind. Dabei gibt es einen Produktions-Redaktionsserver, sowie 1-n (derzeit zwei) Produktions-Ausspielungsserver. Die Produktions-Ausspielungsserver sind hinter einen Loadbalancer geschaltet. Testserver \u00b6 Bezeichnet Server, die zum Testen durch die DDB insbes. bei neuen Releases der Komponenten dienen. Dabei gibt es einen Test-Redaktionsserver, sowie 1-n Test-Ausspielungsserver. Git-Repositorien \u00b6 Bei der Installation oder Aktualisierung aus den beiden Git-Repositorien wird bei der Aufforderung (Jira-Ticket) der zu verwendende Branch bzw. Tag angegeben. OMIM https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions-manager Omeka https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions","title":"Einleitung"},{"location":"index.html#ddb-studio-installations-instandhaltungs-handbuch","text":"","title":"DDB Studio Installations- &amp; Instandhaltungs-Handbuch"},{"location":"index.html#nomenklatur","text":"","title":"Nomenklatur"},{"location":"index.html#ddb-studio","text":"DDB Studio besteht technisch aus zwei Komponenten, zum einen aus dem Omeka Multiinstanz Manager und zum anderen aus der angepassten Version von Omeka . Je nach Servertyp werden diese Komponenten unterschiedlich installiert und aktualisiert.","title":"DDB Studio"},{"location":"index.html#omeka-multiinstanz-manager-omim","text":"OMIM erm\u00f6glicht das Bereitstellen, die Verwaltung und Ver\u00f6ffentlichung von einzelnen virtuellen Ausstellungen d.h. von Omeka Instanzen. Dar\u00fcber hinaus k\u00f6nnen in OMIM Benutzer, Farbpaletten etc. der Ausstellungen verwaltet werden. Das Repository bei github hei\u00dft ddb-virtualexhibitions-manager und findet sich unter https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions-manager","title":"Omeka Multiinstanz Manager - OMIM"},{"location":"index.html#omeka","text":"F\u00fcr die virtuellen Ausstellungen der DDB angepasste Version von Omeka. Das Repository bei github hei\u00dft ddb-virtualexhibitions und findet sich unter https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions","title":"Omeka"},{"location":"index.html#servertypen","text":"","title":"Servertypen"},{"location":"index.html#redaktionsserver","text":"Bezeichnet Server, auf denen die DDB-Studio-Redaktion neue Ausstellungen anlegt, bearbeitet oder l\u00f6scht und von denen aus sie Ausstellungen auf den Ausspielungsservern ver\u00f6ffentlicht. Die Ausstellungen werden vor der Ver\u00f6ffentlichung hier von Kuratoren bearbeitet. Auf diesen Servern sind die zwei Komponenten von DDB Studio vollst\u00e4ndig installiert. In diesem Handbuch wird, f\u00fcr Beispiele und Erl\u00e4uterungen, der Redaktionsserver mit der Beispieldom\u00e4ne redaktion.tld gleichgesetzt.","title":"Redaktionsserver"},{"location":"index.html#ausspielungsserver","text":"Bezeichnet Server, die zum Anzeigen der Ausstellungen f\u00fcr die Besucher dienen. Ausstellungen werden vom jeweiligen Redaktionsserver bei der Ver\u00f6ffentlichung automatisch hierhin \u00fcbertragen. Auf diesen Servern ist die Omeka-Komponente vollst\u00e4ndig installiert, w\u00e4hrend von OMIM nur einzelne, spezielle Dateien installiert sind. In diesem Handbuch werden, f\u00fcr Beispiele und Erl\u00e4uterungen, die Ausspielungsserver mit den Beispieldom\u00e4nen live.tld sowie live-two.tld gleichgesetzt.","title":"Ausspielungsserver"},{"location":"index.html#produktionsserver","text":"Bezeichnet Server, die der \u00d6ffentlichkeit (Kuratoren oder Besuchern) zug\u00e4nglich sind. Dabei gibt es einen Produktions-Redaktionsserver, sowie 1-n (derzeit zwei) Produktions-Ausspielungsserver. Die Produktions-Ausspielungsserver sind hinter einen Loadbalancer geschaltet.","title":"Produktionsserver"},{"location":"index.html#testserver","text":"Bezeichnet Server, die zum Testen durch die DDB insbes. bei neuen Releases der Komponenten dienen. Dabei gibt es einen Test-Redaktionsserver, sowie 1-n Test-Ausspielungsserver.","title":"Testserver"},{"location":"index.html#git-repositorien","text":"Bei der Installation oder Aktualisierung aus den beiden Git-Repositorien wird bei der Aufforderung (Jira-Ticket) der zu verwendende Branch bzw. Tag angegeben. OMIM https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions-manager Omeka https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions","title":"Git-Repositorien"},{"location":"cheatsheet.html","text":"Erl\u00e4uterung der verwendeten Zeichen und Symbole \u00b6 Listen \u00b6 Unsortierte Listen \u00b6 Rot Gr\u00fcn Blau Sortierte Listen \u00b6 Hund Katze Maus Umbr\u00fcche in Listen \u00b6 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Listenpunkte mit mehreren Abs\u00e4tzen \u00b6 Dies ist eine Listenpunkt mit zwei Abs\u00e4tzen. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Horizontale Linien \u00b6 Links \u00b6 Ein Link zu google zum Bseipsiel. Dies ist ein Beispiel f\u00fcr einen Referenz-Link. Betonung \u00b6 Einzelne Sternchen Einzelne Unterstriche Doppelte Sternchen Doppelte Unterstriche Tabellen \u00b6 First Header Second Header Third Header Left Center Right Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero laboriosam quaerat maiores non, natus necessitatibus earum recusandae consectetur omnis pariatur architecto esse! Magni quibusdam nisi vero, in voluptas quia a! Code Bl\u00f6cke \u00b6 PHP \u00b6 <?php define('MY_CONST', \"My Constant\"); $foo = new Bar(); if($foo->baz(MY_CONST) !== true) { // do something ... } ?> JS \u00b6 (function () { const foo = 'bar'; let baz = function () { alert('Hello ' + foo); } baz(); })(); Zeilennummerierung \u00b6 (function () { const foo = 'bar'; let baz = function () { alert('Hello ' + foo); } baz(); })(); Zeilennummerierung und Hervorhebung (44, 46) \u00b6 // Eine Datei ab Zeile 42 ... import foo.bar import boo.baz import foo.bar.baz function init() { } Code innerhalb von Flie\u00dftext ist auch m\u00f6glich, z.B. var test = 0; etc. HTML Attribute \u00b6 Dieser Absatz hat foo und bar als class . Hinweise \u00b6 Eine Notiz \u00b6 Eine Notiz Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Ein Tipp \u00b6 Ein Tipp Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Eine Warnung \u00b6 Eine Warnung Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Ein Gefahrenhinweis \u00b6 Ein Gefahrenhinweis Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Fu\u00dfnoten \u00b6 Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Aufgabenlisten \u00b6 item 1 item A item B more text item a item b item c item C item 2 item 3 SmartSymbols \u00b6 \u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc, \u2154, \u215a 1 st 2 nd 3 rd Marker \u00b6 mark me Inhalts\u00fcbersicht: \u00b6 Erl\u00e4uterung der verwendeten Zeichen und Symbole Listen Unsortierte Listen Sortierte Listen Umbr\u00fcche in Listen Listenpunkte mit mehreren Abs\u00e4tzen Horizontale Linien Links Betonung Tabellen Code Bl\u00f6cke PHP JS Zeilennummerierung Zeilennummerierung und Hervorhebung (44, 46) HTML Attribute Hinweise Eine Notiz Ein Tipp Eine Warnung Ein Gefahrenhinweis Fu\u00dfnoten Aufgabenlisten SmartSymbols Marker Inhalts\u00fcbersicht: Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Erl\u00e4uterung der verwendeten Zeichen und Symbole"},{"location":"cheatsheet.html#erlauterung-der-verwendeten-zeichen-und-symbole","text":"","title":"Erl\u00e4uterung der verwendeten Zeichen und Symbole"},{"location":"cheatsheet.html#listen","text":"","title":"Listen"},{"location":"cheatsheet.html#unsortierte-listen","text":"Rot Gr\u00fcn Blau","title":"Unsortierte Listen"},{"location":"cheatsheet.html#sortierte-listen","text":"Hund Katze Maus","title":"Sortierte Listen"},{"location":"cheatsheet.html#umbruche-in-listen","text":"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.","title":"Umbr\u00fcche in Listen"},{"location":"cheatsheet.html#listenpunkte-mit-mehreren-absatzen","text":"Dies ist eine Listenpunkt mit zwei Abs\u00e4tzen. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.","title":"Listenpunkte mit mehreren Abs\u00e4tzen"},{"location":"cheatsheet.html#horizontale-linien","text":"","title":"Horizontale Linien"},{"location":"cheatsheet.html#links","text":"Ein Link zu google zum Bseipsiel. Dies ist ein Beispiel f\u00fcr einen Referenz-Link.","title":"Links"},{"location":"cheatsheet.html#betonung","text":"Einzelne Sternchen Einzelne Unterstriche Doppelte Sternchen Doppelte Unterstriche","title":"Betonung"},{"location":"cheatsheet.html#tabellen","text":"First Header Second Header Third Header Left Center Right Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero laboriosam quaerat maiores non, natus necessitatibus earum recusandae consectetur omnis pariatur architecto esse! Magni quibusdam nisi vero, in voluptas quia a!","title":"Tabellen"},{"location":"cheatsheet.html#code-blocke","text":"","title":"Code Bl\u00f6cke"},{"location":"cheatsheet.html#php","text":"<?php define('MY_CONST', \"My Constant\"); $foo = new Bar(); if($foo->baz(MY_CONST) !== true) { // do something ... } ?>","title":"PHP"},{"location":"cheatsheet.html#js","text":"(function () { const foo = 'bar'; let baz = function () { alert('Hello ' + foo); } baz(); })();","title":"JS"},{"location":"cheatsheet.html#zeilennummerierung","text":"(function () { const foo = 'bar'; let baz = function () { alert('Hello ' + foo); } baz(); })();","title":"Zeilennummerierung"},{"location":"cheatsheet.html#zeilennummerierung-und-hervorhebung-44-46","text":"// Eine Datei ab Zeile 42 ... import foo.bar import boo.baz import foo.bar.baz function init() { } Code innerhalb von Flie\u00dftext ist auch m\u00f6glich, z.B. var test = 0; etc.","title":"Zeilennummerierung und Hervorhebung (44, 46)"},{"location":"cheatsheet.html#html-attribute","text":"Dieser Absatz hat foo und bar als class .","title":"HTML Attribute"},{"location":"cheatsheet.html#hinweise","text":"","title":"Hinweise"},{"location":"cheatsheet.html#eine-notiz","text":"Eine Notiz Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Eine Notiz"},{"location":"cheatsheet.html#ein-tipp","text":"Ein Tipp Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Ein Tipp"},{"location":"cheatsheet.html#eine-warnung","text":"Eine Warnung Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Eine Warnung"},{"location":"cheatsheet.html#ein-gefahrenhinweis","text":"Ein Gefahrenhinweis Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Ein Gefahrenhinweis"},{"location":"cheatsheet.html#funoten","text":"Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Fu\u00dfnoten"},{"location":"cheatsheet.html#aufgabenlisten","text":"item 1 item A item B more text item a item b item c item C item 2 item 3","title":"Aufgabenlisten"},{"location":"cheatsheet.html#smartsymbols","text":"\u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc, \u2154, \u215a 1 st 2 nd 3 rd","title":"SmartSymbols"},{"location":"cheatsheet.html#marker","text":"mark me","title":"Marker"},{"location":"cheatsheet.html#inhaltsubersicht","text":"Erl\u00e4uterung der verwendeten Zeichen und Symbole Listen Unsortierte Listen Sortierte Listen Umbr\u00fcche in Listen Listenpunkte mit mehreren Abs\u00e4tzen Horizontale Linien Links Betonung Tabellen Code Bl\u00f6cke PHP JS Zeilennummerierung Zeilennummerierung und Hervorhebung (44, 46) HTML Attribute Hinweise Eine Notiz Ein Tipp Eine Warnung Ein Gefahrenhinweis Fu\u00dfnoten Aufgabenlisten SmartSymbols Marker Inhalts\u00fcbersicht: Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Inhalts\u00fcbersicht:"},{"location":"config.html","text":"Erweiterte Konfiguration \u00b6 Es k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden. DDB Video-Quellen \u00b6 F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php k\u00f6nnen die Schl\u00fcssel der Eigenschaft $config ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden: ddbXmlSrv Server mit XML-Daten ddbIIFResHelperSrvPrefix Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen ddbIIIFSrvPrefix IIIF Server mit Bilddateien ddbVideoSrvPrefix Server mit Videodateien DDB Proxyserver \u00b6 F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php kann der Eintrag f\u00fcr den Proxyserver der DDB bei Vimeovideos ge\u00e4ndert werden. \u00c4mdern Sie dazu den Wert f\u00fcr CURLOPT_PROXY in der Methode setVideoVimeoInfo . Lizenz-Shortcodes \u00b6 F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php in der Methode getLicenseFromShortcode k\u00f6nnen in der Variable $licenses die Lizenz-Shortcodes angepasst werden. Der Aufbau der jeweiligen Eintr\u00e4ge ist: 'SHORTCODE' => array( 'name' => 'Name der Lizenz', 'link' => 'URL zu der Lizenzdefinition', 'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons' ) Beim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden. HTML Format f\u00fcr Icons: <i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i> Die Grafikdatei f\u00fcr die Icons befindet sich unter: <root-der-installation>/lib/omeka/themes/ddb/images/licenses.png CSS-Definitionen sind in der Datei: <root-der-installation>/lib/omeka/themes/ddb/css/style.css Definierte CSS-Class-Selektoren: .license-by .license-nd .license-nc .license-sa .license-pd .license-pdzero .license-rr .license-or .license-vw DDB Basis-URL \u00b6 Zur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable $ddbBaseDomain in den Dateien ddb-virtualexhibitions/omeka/themes/ddb/common/header.php ddb-virtualexhibitions/omeka/themes/ddb/common/footer.php angepasst werden.","title":"Erweiterte Konfiguration"},{"location":"config.html#erweiterte-konfiguration","text":"Es k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden.","title":"Erweiterte Konfiguration"},{"location":"config.html#ddb-video-quellen","text":"F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php k\u00f6nnen die Schl\u00fcssel der Eigenschaft $config ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden: ddbXmlSrv Server mit XML-Daten ddbIIFResHelperSrvPrefix Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen ddbIIIFSrvPrefix IIIF Server mit Bilddateien ddbVideoSrvPrefix Server mit Videodateien","title":"DDB Video-Quellen"},{"location":"config.html#ddb-proxyserver","text":"F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php kann der Eintrag f\u00fcr den Proxyserver der DDB bei Vimeovideos ge\u00e4ndert werden. \u00c4mdern Sie dazu den Wert f\u00fcr CURLOPT_PROXY in der Methode setVideoVimeoInfo .","title":"DDB Proxyserver"},{"location":"config.html#lizenz-shortcodes","text":"F\u00fcr Ausstellungen vom Typ \"Leporello\" in der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php und f\u00fcr Ausstellungen vom Typ \"Litfa\u00df\" in der Datei ddb-virtualexhibitions/omeka/plugins_lf/ExhibitBuilder/helpers/ExhibitDdbHelper.php in der Methode getLicenseFromShortcode k\u00f6nnen in der Variable $licenses die Lizenz-Shortcodes angepasst werden. Der Aufbau der jeweiligen Eintr\u00e4ge ist: 'SHORTCODE' => array( 'name' => 'Name der Lizenz', 'link' => 'URL zu der Lizenzdefinition', 'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons' ) Beim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden. HTML Format f\u00fcr Icons: <i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i> Die Grafikdatei f\u00fcr die Icons befindet sich unter: <root-der-installation>/lib/omeka/themes/ddb/images/licenses.png CSS-Definitionen sind in der Datei: <root-der-installation>/lib/omeka/themes/ddb/css/style.css Definierte CSS-Class-Selektoren: .license-by .license-nd .license-nc .license-sa .license-pd .license-pdzero .license-rr .license-or .license-vw","title":"Lizenz-Shortcodes"},{"location":"config.html#ddb-basis-url","text":"Zur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable $ddbBaseDomain in den Dateien ddb-virtualexhibitions/omeka/themes/ddb/common/header.php ddb-virtualexhibitions/omeka/themes/ddb/common/footer.php angepasst werden.","title":"DDB Basis-URL"},{"location":"dev-srv.html","text":"Installation \u00b6 MySQL \u00b6 Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Sie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie einmalig auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen. Dateien \u00b6 OMIM \u00b6 Klonen Sie zun\u00e4chst das Git-Repositorium von OMIM in ein leeres Verzeichnis auf dem Server. Checken Sie den jeweils abgesprochenen Branch f\u00fcr die Installation aus. Sorgen Sie daf\u00fcr, dass in der Apache Serverkonfiguration der DOCUMENT_ROOT der Dom\u00e4ne auf das Unterverzeichnis public zeigt. Sorgen Sie ebenfalls daf\u00fcr, dass der Benutzer bzw. die Gruppe, unter der Apache & PHP auf dem Server ausgef\u00fchrt werden, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat. Omeka \u00b6 In dem oben geklonten Git-Repositorium von OMIM befindet sich ein Unterverzeichnis lib . Dort hinein muss der Inhalt bzw. der Unterordner omeka des Git-Repositoriums von Omeka gelegt werden. Dazu gibt es zwei M\u00f6glichkeiten: Zum einen, k\u00f6nnen Sie das Git-Repositorium von Omeka in ein beliebiges Verzeichnis auf dem Server klonen und dann eine symbolische Verkn\u00fcpfung bei OMIM innerhalb von lib auf den Unterordner omeka erstellen (Die anderen Ordner und Dateien wie LICENSE, README.md etc. werden dort nicht ben\u00f6tigt). Zum anderen k\u00f6nnen Sie auch direkt das Git-Repositorium von Omeka innerhalb des Unterverzeichnis lib klonen. Gleich f\u00fcr welche Methode Sie sich entscheiden, muss am Ende in OMIM ein Pfad existieren mit lib/omeka . Vergessen Sie auch beim Git-Repositorium von Omeka nicht, den jeweils abgesprochenen Branch f\u00fcr die Installation auszuchecken. Konfiguration \u00b6 OMIM \u00b6 Die Konfiguration erfolgt \u00fcber die Dateien im Unterverzeichnis app/config des Git-Repositoriums von OMIM . Benennen oder kopieren Sie zun\u00e4chst in dem Ornder app/config folgende Dateien um: app.sample.php zu app.php database.sample.php zu database.php omim.sample.php zu omim.php F\u00fcr die Konfiguration sind insgesamt folgende Dateien anzupassen: (Alle anderen Konfigurationsdateien k\u00f6nnen mit den Standardeinstellungen beibehalten werden) app config app.php database.php (mail.php) omim.php app/config/app.php \u00b6 Passen Sie hier die allgemeine Konfiguration der OMIM-APP an. Relevanter Konfigurationsabschnitt: 'url' Standardwert: 'http://redaktion.tld' Hier bitte die URL des Redaktionsservers angeben 'key' Standardwert: 'R5rt8vDRd3z75QyPqwEk1q88y5sCIH08' Hier bitte einen 32 Zeichen lange Zeichenkette eingeben app/config/database.php \u00b6 Passen Sie hier die Datenbankeinstellungen des Redaktionsservers an. Relevanter Konfigurationsabschnitt: <?php // ... 'connections' => array( 'mysql' => array( 'driver' => 'mysql', 'host' => 'localhost', 'unix_socket' => '/tmp/mysql5.sock', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'prefix' => '', ), ), // ... Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein. Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an. app/config/mail.php \u00b6 Sollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein. app/config/omim.php \u00b6 Passen Sie hier die spezifische Konfiguration f\u00fcr die OMIM Anwendung an. Relevanter Konfigurationsabschnitt: <?php // ... 'development' => array( 'user' => array( 'group' => 'www-data' ) ), 'remote' => array( 0 => array( 'production' => array( 'http' => array( 'url' => 'http://live.tld' ), 'ssh' => array( 'host' => 'live.tld', 'port' => '22', 'username' => 'Benutzername f\u00fcr SSH', 'key' => '/path/to/private/rsa/key/file', 'docroot' => '/path/to/document_root/on/live/server', 'datadir' => '/path/to/data/dir/on/live/server', 'group' => 'www-data' ), 'db' => array( 'host' => 'localhost', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'unix_socket' => '/tmp/mysql5.sock', ) ) ), 1 => array( 'production' => array( 'http' => array( 'url' => 'http://live-two.tld' ), 'ssh' => array( 'host' => 'live-two.tld', 'port' => '22', 'username' => 'Benutzername f\u00fcr SSH', 'key' => '/path/to/private/rsa/key/file', 'docroot' => '/path/to/document_root/on/live/server', 'datadir' => '/path/to/data/dir/on/live/server', 'group' => 'www-data' ), 'db' => array( 'host' => 'localhost', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'unix_socket' => '/tmp/mysql5.sock', ) ) ), ) // ... ['development']['user']['group'] Tragen Sie hier die Apache Benutzergruppe des Redaktionsservers ein. ['remote']['n']['production']['http']['url'] Tragen Sie die URL des jeweiligen Ausspielungsservers ein. ['remote']['n']['production']['ssh']['host'] Tragen Sie den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein. ['remote']['n']['production']['ssh']['port'] Tragen Sie den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist. ['remote']['n']['production']['ssh']['username'] Tragen Sie den Benutzernamen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein. ['remote']['n']['production']['ssh']['key'] Tragen Sie den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei , mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Sie m\u00fcssen zun\u00e4chst einen RSA-Key auf dem Redaktionsserver erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die authorized_keys Datei des Benutzers importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte. ['remote']['n']['production']['ssh']['docroot'] Tragen Sie den absoluten Pfad, zu dem in der Apache-Konfiguration festgelegten DOCUMENT_ROOT des Ausspielungsservers, ein. Beachten sie, dass dieser zwingend auf das Verzeichnis public des Ausspielungsservers zeigen muss. ['remote']['n']['production']['ssh']['datadir'] Tragen Sie den absoluten Pfad zu dem data Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis data des Ausspielungsservers zeigen muss (s.u.). ['remote']['n']['production']['ssh']['group'] Tragen Sie die Benutzergruppe ein, unter der Apache & PHP auf dem Ausspielungsserver ausgef\u00fchrt wird. ['remote']['n']['production']['db']['database'] Tragen Sie hier den Namen der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['username'] Tragen Sie hier den Benutzernamen der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['password'] Tragen Sie hier das Passwort f\u00fcr den Benutzer der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['unix_socket'] Passen Sie ggf. den Pfad zu der Unix Socket Datei auf dem Ausspielungsserver an. Variablenbezeichnungen Beachten Sie, dass in der Konfigurationsdatei die Bezeichnungen sich, aus historischen Gr\u00fcnden, nicht nach der aktuellen Nomenklatur richten! Der Konfigurationsschl\u00fcssel development steht f\u00fcr den Redaktionsserver . Der Konfigurationsschl\u00fcssel production steht f\u00fcr einen Ausspielungsserver . Die Variablenbezeichnungen haben nichts mit der Unterscheidung nach Entwicklungs- oder Produktionsumgebungen zu tun! Remotekonfiguration Beachten Sie, dass die Einstellungen f\u00fcr db unter remote in die Omeka-DB-INI-Dateien auf den Ausspielungsservern \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den jeweiligen Ausspielungsserver bezieht. Verzeichnis /public \u00b6 Dieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das DOCUMENT_ROOT der Dom\u00e4ne sein. Cronjobs \u00b6 Um unter OMIM erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein. F\u00fcr den Cronjob finden Sie im OMIM die cron.php . Aktualisieren Sie Ihr Repositorium, falls die Datei auf Ihrem Server nicht vorhanden ist. Sie k\u00f6nnen in der cron.php-Datei unter $threshold = 1 * 24 * 60 * 60; // a day; die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis public/downloads gel\u00f6scht. Damit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl php -v eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl whereis php . Die Ausgabe sollte i.d.R. den Pfad /usr/bin/php enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren: /usr/bin/php -v . Richten Sie Crontab ( crontab -e ) ein. F\u00fcgen Sie eine Zeile hinzu mit: 0 0 * * * php /pfad/auf/server/zu/cron.php Alternativ setzen sie den vollen Pfad zur PHP-Executable: 0 0 * * * /usr/bin/php /pfad/auf/server/zu/cron.php In dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern. Lese- und Schreibrechte des Benutzers Beachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte f\u00fcr die Dateien im Verzeichnis public/downloads haben muss! Sollte das nicht der Fall sein, konfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt. Aktualisierungen \u00b6 Alle Aktualisierungen werden \u00fcber die jeweiligen GitHub-Repositorien bereit gestellt. MySQL \u00b6 Die bereits existierende Datenbank kann, sofern Sie die Anforderungen erf\u00fcllt, weiterhin verwendet werden. Die Datenbankinhalte werden \u00fcber OMIM aktualisiert, sodass hier i.d.R. kein Handlungsbedarf besteht. Dateien \u00b6 OMIM \u00b6 Falls Sie im Verzeichnis app/config Dateien editiert haben, sichern Sie diese zun\u00e4chst. Vergewissern Sie sich, dass Sie sich im Ordner von OMIM in der richtigen Git-Branch befinden und checken Sie ggf. die erforderliche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus. Spielen Sie ggf. gesicherte Konfigurationsdateien zur\u00fcck. Omeka \u00b6 Vergewissern Sie sich, dass Sie sich im Ordner von Omeka in der richtigen Git-Branch befinden und checken Sie ggf. die erforderliche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus. Sprachdateien Cache \u00b6 Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem jeweiligen Server an. Dieser muss nach Aktualisierungen von Omeka, die die Sprachdateien betreffen (wir weisen entsprechend im Ticket darauf hin), vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht unmittelbar wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Servern nach der Aktualisierung von Omeka bitte l\u00f6schen. Die Dateien werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Redaktionsserver"},{"location":"dev-srv.html#installation","text":"","title":"Installation"},{"location":"dev-srv.html#mysql","text":"Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Sie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie einmalig auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen.","title":"MySQL"},{"location":"dev-srv.html#dateien","text":"","title":"Dateien"},{"location":"dev-srv.html#omim","text":"Klonen Sie zun\u00e4chst das Git-Repositorium von OMIM in ein leeres Verzeichnis auf dem Server. Checken Sie den jeweils abgesprochenen Branch f\u00fcr die Installation aus. Sorgen Sie daf\u00fcr, dass in der Apache Serverkonfiguration der DOCUMENT_ROOT der Dom\u00e4ne auf das Unterverzeichnis public zeigt. Sorgen Sie ebenfalls daf\u00fcr, dass der Benutzer bzw. die Gruppe, unter der Apache & PHP auf dem Server ausgef\u00fchrt werden, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat.","title":"OMIM"},{"location":"dev-srv.html#omeka","text":"In dem oben geklonten Git-Repositorium von OMIM befindet sich ein Unterverzeichnis lib . Dort hinein muss der Inhalt bzw. der Unterordner omeka des Git-Repositoriums von Omeka gelegt werden. Dazu gibt es zwei M\u00f6glichkeiten: Zum einen, k\u00f6nnen Sie das Git-Repositorium von Omeka in ein beliebiges Verzeichnis auf dem Server klonen und dann eine symbolische Verkn\u00fcpfung bei OMIM innerhalb von lib auf den Unterordner omeka erstellen (Die anderen Ordner und Dateien wie LICENSE, README.md etc. werden dort nicht ben\u00f6tigt). Zum anderen k\u00f6nnen Sie auch direkt das Git-Repositorium von Omeka innerhalb des Unterverzeichnis lib klonen. Gleich f\u00fcr welche Methode Sie sich entscheiden, muss am Ende in OMIM ein Pfad existieren mit lib/omeka . Vergessen Sie auch beim Git-Repositorium von Omeka nicht, den jeweils abgesprochenen Branch f\u00fcr die Installation auszuchecken.","title":"Omeka"},{"location":"dev-srv.html#konfiguration","text":"","title":"Konfiguration"},{"location":"dev-srv.html#omim_1","text":"Die Konfiguration erfolgt \u00fcber die Dateien im Unterverzeichnis app/config des Git-Repositoriums von OMIM . Benennen oder kopieren Sie zun\u00e4chst in dem Ornder app/config folgende Dateien um: app.sample.php zu app.php database.sample.php zu database.php omim.sample.php zu omim.php F\u00fcr die Konfiguration sind insgesamt folgende Dateien anzupassen: (Alle anderen Konfigurationsdateien k\u00f6nnen mit den Standardeinstellungen beibehalten werden) app config app.php database.php (mail.php) omim.php","title":"OMIM"},{"location":"dev-srv.html#appconfigappphp","text":"Passen Sie hier die allgemeine Konfiguration der OMIM-APP an. Relevanter Konfigurationsabschnitt: 'url' Standardwert: 'http://redaktion.tld' Hier bitte die URL des Redaktionsservers angeben 'key' Standardwert: 'R5rt8vDRd3z75QyPqwEk1q88y5sCIH08' Hier bitte einen 32 Zeichen lange Zeichenkette eingeben","title":"app/config/app.php"},{"location":"dev-srv.html#appconfigdatabasephp","text":"Passen Sie hier die Datenbankeinstellungen des Redaktionsservers an. Relevanter Konfigurationsabschnitt: <?php // ... 'connections' => array( 'mysql' => array( 'driver' => 'mysql', 'host' => 'localhost', 'unix_socket' => '/tmp/mysql5.sock', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'prefix' => '', ), ), // ... Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein. Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an.","title":"app/config/database.php"},{"location":"dev-srv.html#appconfigmailphp","text":"Sollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein.","title":"app/config/mail.php"},{"location":"dev-srv.html#appconfigomimphp","text":"Passen Sie hier die spezifische Konfiguration f\u00fcr die OMIM Anwendung an. Relevanter Konfigurationsabschnitt: <?php // ... 'development' => array( 'user' => array( 'group' => 'www-data' ) ), 'remote' => array( 0 => array( 'production' => array( 'http' => array( 'url' => 'http://live.tld' ), 'ssh' => array( 'host' => 'live.tld', 'port' => '22', 'username' => 'Benutzername f\u00fcr SSH', 'key' => '/path/to/private/rsa/key/file', 'docroot' => '/path/to/document_root/on/live/server', 'datadir' => '/path/to/data/dir/on/live/server', 'group' => 'www-data' ), 'db' => array( 'host' => 'localhost', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'unix_socket' => '/tmp/mysql5.sock', ) ) ), 1 => array( 'production' => array( 'http' => array( 'url' => 'http://live-two.tld' ), 'ssh' => array( 'host' => 'live-two.tld', 'port' => '22', 'username' => 'Benutzername f\u00fcr SSH', 'key' => '/path/to/private/rsa/key/file', 'docroot' => '/path/to/document_root/on/live/server', 'datadir' => '/path/to/data/dir/on/live/server', 'group' => 'www-data' ), 'db' => array( 'host' => 'localhost', 'database' => 'Name der Datenbank', 'username' => 'Benutzername', 'password' => 'Passwort', 'charset' => 'utf8', 'collation' => 'utf8_unicode_ci', 'unix_socket' => '/tmp/mysql5.sock', ) ) ), ) // ... ['development']['user']['group'] Tragen Sie hier die Apache Benutzergruppe des Redaktionsservers ein. ['remote']['n']['production']['http']['url'] Tragen Sie die URL des jeweiligen Ausspielungsservers ein. ['remote']['n']['production']['ssh']['host'] Tragen Sie den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein. ['remote']['n']['production']['ssh']['port'] Tragen Sie den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist. ['remote']['n']['production']['ssh']['username'] Tragen Sie den Benutzernamen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein. ['remote']['n']['production']['ssh']['key'] Tragen Sie den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei , mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Sie m\u00fcssen zun\u00e4chst einen RSA-Key auf dem Redaktionsserver erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die authorized_keys Datei des Benutzers importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte. ['remote']['n']['production']['ssh']['docroot'] Tragen Sie den absoluten Pfad, zu dem in der Apache-Konfiguration festgelegten DOCUMENT_ROOT des Ausspielungsservers, ein. Beachten sie, dass dieser zwingend auf das Verzeichnis public des Ausspielungsservers zeigen muss. ['remote']['n']['production']['ssh']['datadir'] Tragen Sie den absoluten Pfad zu dem data Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis data des Ausspielungsservers zeigen muss (s.u.). ['remote']['n']['production']['ssh']['group'] Tragen Sie die Benutzergruppe ein, unter der Apache & PHP auf dem Ausspielungsserver ausgef\u00fchrt wird. ['remote']['n']['production']['db']['database'] Tragen Sie hier den Namen der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['username'] Tragen Sie hier den Benutzernamen der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['password'] Tragen Sie hier das Passwort f\u00fcr den Benutzer der Datenbank auf dem Ausspielungsserver ein. ['remote']['n']['production']['db']['unix_socket'] Passen Sie ggf. den Pfad zu der Unix Socket Datei auf dem Ausspielungsserver an. Variablenbezeichnungen Beachten Sie, dass in der Konfigurationsdatei die Bezeichnungen sich, aus historischen Gr\u00fcnden, nicht nach der aktuellen Nomenklatur richten! Der Konfigurationsschl\u00fcssel development steht f\u00fcr den Redaktionsserver . Der Konfigurationsschl\u00fcssel production steht f\u00fcr einen Ausspielungsserver . Die Variablenbezeichnungen haben nichts mit der Unterscheidung nach Entwicklungs- oder Produktionsumgebungen zu tun! Remotekonfiguration Beachten Sie, dass die Einstellungen f\u00fcr db unter remote in die Omeka-DB-INI-Dateien auf den Ausspielungsservern \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den jeweiligen Ausspielungsserver bezieht.","title":"app/config/omim.php"},{"location":"dev-srv.html#verzeichnis-public","text":"Dieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das DOCUMENT_ROOT der Dom\u00e4ne sein.","title":"Verzeichnis /public"},{"location":"dev-srv.html#cronjobs","text":"Um unter OMIM erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein. F\u00fcr den Cronjob finden Sie im OMIM die cron.php . Aktualisieren Sie Ihr Repositorium, falls die Datei auf Ihrem Server nicht vorhanden ist. Sie k\u00f6nnen in der cron.php-Datei unter $threshold = 1 * 24 * 60 * 60; // a day; die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis public/downloads gel\u00f6scht. Damit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl php -v eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl whereis php . Die Ausgabe sollte i.d.R. den Pfad /usr/bin/php enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren: /usr/bin/php -v . Richten Sie Crontab ( crontab -e ) ein. F\u00fcgen Sie eine Zeile hinzu mit: 0 0 * * * php /pfad/auf/server/zu/cron.php Alternativ setzen sie den vollen Pfad zur PHP-Executable: 0 0 * * * /usr/bin/php /pfad/auf/server/zu/cron.php In dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern. Lese- und Schreibrechte des Benutzers Beachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte f\u00fcr die Dateien im Verzeichnis public/downloads haben muss! Sollte das nicht der Fall sein, konfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt.","title":"Cronjobs"},{"location":"dev-srv.html#aktualisierungen","text":"Alle Aktualisierungen werden \u00fcber die jeweiligen GitHub-Repositorien bereit gestellt.","title":"Aktualisierungen"},{"location":"dev-srv.html#mysql_1","text":"Die bereits existierende Datenbank kann, sofern Sie die Anforderungen erf\u00fcllt, weiterhin verwendet werden. Die Datenbankinhalte werden \u00fcber OMIM aktualisiert, sodass hier i.d.R. kein Handlungsbedarf besteht.","title":"MySQL"},{"location":"dev-srv.html#dateien_1","text":"","title":"Dateien"},{"location":"dev-srv.html#omim_2","text":"Falls Sie im Verzeichnis app/config Dateien editiert haben, sichern Sie diese zun\u00e4chst. Vergewissern Sie sich, dass Sie sich im Ordner von OMIM in der richtigen Git-Branch befinden und checken Sie ggf. die erforderliche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus. Spielen Sie ggf. gesicherte Konfigurationsdateien zur\u00fcck.","title":"OMIM"},{"location":"dev-srv.html#omeka_1","text":"Vergewissern Sie sich, dass Sie sich im Ordner von Omeka in der richtigen Git-Branch befinden und checken Sie ggf. die erforderliche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus.","title":"Omeka"},{"location":"dev-srv.html#sprachdateien-cache","text":"Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem jeweiligen Server an. Dieser muss nach Aktualisierungen von Omeka, die die Sprachdateien betreffen (wir weisen entsprechend im Ticket darauf hin), vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht unmittelbar wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Servern nach der Aktualisierung von Omeka bitte l\u00f6schen. Die Dateien werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Sprachdateien Cache"},{"location":"install.html","text":"Allgemeine Anforderungen \u00b6 Die Installation erfolgt auf *nix-Servern mit eingerichteter LAMP Konfiguration. Voraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann. Die Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen. Apache Server \u00b6 Auf allen Apache http-Servern m\u00fcssen mindestens folgende Module installiert und aktiviert sein: deflate mime rewrite Das Modul rewrite muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein. Dar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option FollowSymLinks gesetzt sein. MySQL Server \u00b6 Version 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET (Getestet Version: MariaDB 10.1.44, sowie MySQL 5.7.26) PHP \u00b6 Version 5.4 oder h\u00f6her. (Getestete Version: 7.2 (mit FastCGI-Prozessmanager php7.2-fpm)) Erforderliche Module/Extensions: MCrypt PHP JSON MYSQLI und PDO_MySQL EXIF php-imagick cURL php.ini \u00b6 Empfohlene Mindestwerte insbes. auf Redaktionsservern: max_execution_time = 7200 max_input_time = 7200 memory_limit = 256M post_max_size = 200M upload_max_filesize = 200M ImageMagick \u00b6 Muss auf allen Servern installiert sein. mozjpeg und jpeg-archive \u00b6 mozjpeg muss auf Redaktionsservern installiert sein: https://github.com/mozilla/mozjpeg jpeg-archive muss auf Redaktionsservern installiert sein: https://github.com/danielgtaylor/jpeg-archive/","title":"Anforderungen"},{"location":"install.html#allgemeine-anforderungen","text":"Die Installation erfolgt auf *nix-Servern mit eingerichteter LAMP Konfiguration. Voraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann. Die Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen.","title":"Allgemeine Anforderungen"},{"location":"install.html#apache-server","text":"Auf allen Apache http-Servern m\u00fcssen mindestens folgende Module installiert und aktiviert sein: deflate mime rewrite Das Modul rewrite muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein. Dar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option FollowSymLinks gesetzt sein.","title":"Apache Server"},{"location":"install.html#mysql-server","text":"Version 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET (Getestet Version: MariaDB 10.1.44, sowie MySQL 5.7.26)","title":"MySQL Server"},{"location":"install.html#php","text":"Version 5.4 oder h\u00f6her. (Getestete Version: 7.2 (mit FastCGI-Prozessmanager php7.2-fpm)) Erforderliche Module/Extensions: MCrypt PHP JSON MYSQLI und PDO_MySQL EXIF php-imagick cURL","title":"PHP"},{"location":"install.html#phpini","text":"Empfohlene Mindestwerte insbes. auf Redaktionsservern: max_execution_time = 7200 max_input_time = 7200 memory_limit = 256M post_max_size = 200M upload_max_filesize = 200M","title":"php.ini"},{"location":"install.html#imagemagick","text":"Muss auf allen Servern installiert sein.","title":"ImageMagick"},{"location":"install.html#mozjpeg-und-jpeg-archive","text":"mozjpeg muss auf Redaktionsservern installiert sein: https://github.com/mozilla/mozjpeg jpeg-archive muss auf Redaktionsservern installiert sein: https://github.com/danielgtaylor/jpeg-archive/","title":"mozjpeg und jpeg-archive"},{"location":"prod-srv.html","text":"Installation \u00b6 MySQL \u00b6 Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Die Datenbank bleibt leer und wird, durch die Aktion \"Ver\u00f6ffentlichen\" bei der Verwendung von OMIM, vom Redaktionsserver aus mit Daten bef\u00fcllt. Konfiguration OMIM Achten darauf, dass die Angaben unter ['remote']['n']['production']['db'] in der Konfiguration des Redaktionsservers f\u00fcr die Datenbank auf diesen Ausspielungsserver korrekt sein m\u00fcssen. Dateien \u00b6 Stammverzeichnis \u00b6 Erstellen Sie in einem leeren Ordner ihrer Wahl (Stammverzeichnis) drei Unterordner: data lib public Sorgen Sie daf\u00fcr, dass in der Apache Serverkonfiguration der DOCUMENT_ROOT der Dom\u00e4ne auf das Unterverzeichnis public zeigt. Konfiguration OMIM Beachten Sie, dass die Pfadangaben in ['remote']['n']['production']['ssh']['docroot'] und ['remote']['n']['production']['ssh']['datadir'] in der Konfiguration des Redaktionsservers f\u00fcr diesen Ausspielungsserver die korrekten absoluten Serverpfade f\u00fcr die Ordner public und data enthalten m\u00fcssen. Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache & PHP auf dem Server ausgef\u00fchrt werden, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben. Sie k\u00f6nnen dazu z.B. den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache & PHP und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664 setzen. OMIM \u00b6 Klonen Sie das Git-Repositorium von OMIM in ein leeres Verzeichnis auf dem Server. Checken Sie den jeweils abgesprochenen Branch f\u00fcr die Installation aus. Speicherort f\u00fcr Git-Repositorium von OMIM Bitte klonen Sie auf Ausspielungsservern das Repositorium von OMIM NICHT in das Stammverzeichnis , wo sich data , lib und public befinden! Kopieren Sie die Datei .htaccess aus dem Ordner data/production in dem Git-Repositorium von OMIM nach public im oben erstelltem Stammverzeichnis. Kopieren Sie die Dateien deploy.tar.gz und deploy_lf.tar.gz aus dem Ordner data/production in dem Git-Repositorium von OMIM nach data im oben erstelltem Stammverzeichnis. Bitte die Dateien hier wirklich kopieren und nicht per symbolischer Verkn\u00fcpfung setzen. Ordnername production Beachten Sie, dass sich der Ordnername production , aus historischen Gr\u00fcnden, nicht nach der aktuellen Nomenklatur richtet! production steht f\u00fcr hier Ausspielungsserver . Der Ordner hat nichts mit der Unterscheidung nach Test- oder Produktionsumgebungen zu tun! Omeka \u00b6 In das oben erstellte Verzeichnis lib im Stammverzeichnis, muss der Inhalt bzw. der Unterordner omeka des Git-Repositoriums von Omekas gelegt werden. Dazu gibt es zwei M\u00f6glichkeiten: Zum einen, k\u00f6nnen Sie das Git-Repositorium von Omeka in ein beliebiges Verzeichnis auf dem Server klonen und dann eine symbolische Verkn\u00fcpfung bei OMIM innerhalb von lib auf den Unterordner omeka erstellen (Die anderen Ordner und Dateien wie LICENSE, README.md etc. werden dort nicht ben\u00f6tigt). Zum anderen k\u00f6nnen Sie auch direkt das Git-Repositorium von Omeka innerhalb des Unterverzeichnis lib klonen. Gleich f\u00fcr welche Methode Sie sich entscheiden, muss am Ende in OMIM ein Pfad existieren mit lib/omeka . Vergessen Sie auch beim Git-Repositorium von Omeka nicht, den jeweils abgesprochenen Branch f\u00fcr die Installation auszuchecken. SSH \u00b6 Denken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die authorized_keys Datei einzutragen. Aktualisierungen \u00b6 MySQL \u00b6 Die bereits existierende Datenbank kann, sofern Sie die Anforderungen erf\u00fcllt, weiterhin verwendet werden. Die Datenbankinhalte werden \u00fcber OMIM aktualisiert, sodass hier i.d.R. kein Handlungsbedarf besteht. Dateien \u00b6 OMIM \u00b6 In der Regel werden die ben\u00f6tigten Dateien vom Redaktionsserver aus automatisch aktualisiert. Falls dennoch Handlungsbedarf besteht, werden Sie explizit dazu aufgefordert. Omeka \u00b6 Vergewissern Sie sich, dass Sie sich im Ordner von Omeka in der richtigen Git-Branch befinden und checken Sie ggf. die erforderlioche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus. Sprachdateien Cache \u00b6 Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem jeweiligen Server an. Dieser muss nach Aktualisierungen von Omeka, die die Sprachdateien betreffen (wir weisen entsprechend im Ticket darauf hin), vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht unmittelbar wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Servern nach der Aktualisierung von Omeka bitte l\u00f6schen. Die Dateien werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Ausspielungsserver"},{"location":"prod-srv.html#installation","text":"","title":"Installation"},{"location":"prod-srv.html#mysql","text":"Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Die Datenbank bleibt leer und wird, durch die Aktion \"Ver\u00f6ffentlichen\" bei der Verwendung von OMIM, vom Redaktionsserver aus mit Daten bef\u00fcllt. Konfiguration OMIM Achten darauf, dass die Angaben unter ['remote']['n']['production']['db'] in der Konfiguration des Redaktionsservers f\u00fcr die Datenbank auf diesen Ausspielungsserver korrekt sein m\u00fcssen.","title":"MySQL"},{"location":"prod-srv.html#dateien","text":"","title":"Dateien"},{"location":"prod-srv.html#stammverzeichnis","text":"Erstellen Sie in einem leeren Ordner ihrer Wahl (Stammverzeichnis) drei Unterordner: data lib public Sorgen Sie daf\u00fcr, dass in der Apache Serverkonfiguration der DOCUMENT_ROOT der Dom\u00e4ne auf das Unterverzeichnis public zeigt. Konfiguration OMIM Beachten Sie, dass die Pfadangaben in ['remote']['n']['production']['ssh']['docroot'] und ['remote']['n']['production']['ssh']['datadir'] in der Konfiguration des Redaktionsservers f\u00fcr diesen Ausspielungsserver die korrekten absoluten Serverpfade f\u00fcr die Ordner public und data enthalten m\u00fcssen. Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache & PHP auf dem Server ausgef\u00fchrt werden, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben. Sie k\u00f6nnen dazu z.B. den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache & PHP und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664 setzen.","title":"Stammverzeichnis"},{"location":"prod-srv.html#omim","text":"Klonen Sie das Git-Repositorium von OMIM in ein leeres Verzeichnis auf dem Server. Checken Sie den jeweils abgesprochenen Branch f\u00fcr die Installation aus. Speicherort f\u00fcr Git-Repositorium von OMIM Bitte klonen Sie auf Ausspielungsservern das Repositorium von OMIM NICHT in das Stammverzeichnis , wo sich data , lib und public befinden! Kopieren Sie die Datei .htaccess aus dem Ordner data/production in dem Git-Repositorium von OMIM nach public im oben erstelltem Stammverzeichnis. Kopieren Sie die Dateien deploy.tar.gz und deploy_lf.tar.gz aus dem Ordner data/production in dem Git-Repositorium von OMIM nach data im oben erstelltem Stammverzeichnis. Bitte die Dateien hier wirklich kopieren und nicht per symbolischer Verkn\u00fcpfung setzen. Ordnername production Beachten Sie, dass sich der Ordnername production , aus historischen Gr\u00fcnden, nicht nach der aktuellen Nomenklatur richtet! production steht f\u00fcr hier Ausspielungsserver . Der Ordner hat nichts mit der Unterscheidung nach Test- oder Produktionsumgebungen zu tun!","title":"OMIM"},{"location":"prod-srv.html#omeka","text":"In das oben erstellte Verzeichnis lib im Stammverzeichnis, muss der Inhalt bzw. der Unterordner omeka des Git-Repositoriums von Omekas gelegt werden. Dazu gibt es zwei M\u00f6glichkeiten: Zum einen, k\u00f6nnen Sie das Git-Repositorium von Omeka in ein beliebiges Verzeichnis auf dem Server klonen und dann eine symbolische Verkn\u00fcpfung bei OMIM innerhalb von lib auf den Unterordner omeka erstellen (Die anderen Ordner und Dateien wie LICENSE, README.md etc. werden dort nicht ben\u00f6tigt). Zum anderen k\u00f6nnen Sie auch direkt das Git-Repositorium von Omeka innerhalb des Unterverzeichnis lib klonen. Gleich f\u00fcr welche Methode Sie sich entscheiden, muss am Ende in OMIM ein Pfad existieren mit lib/omeka . Vergessen Sie auch beim Git-Repositorium von Omeka nicht, den jeweils abgesprochenen Branch f\u00fcr die Installation auszuchecken.","title":"Omeka"},{"location":"prod-srv.html#ssh","text":"Denken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die authorized_keys Datei einzutragen.","title":"SSH"},{"location":"prod-srv.html#aktualisierungen","text":"","title":"Aktualisierungen"},{"location":"prod-srv.html#mysql_1","text":"Die bereits existierende Datenbank kann, sofern Sie die Anforderungen erf\u00fcllt, weiterhin verwendet werden. Die Datenbankinhalte werden \u00fcber OMIM aktualisiert, sodass hier i.d.R. kein Handlungsbedarf besteht.","title":"MySQL"},{"location":"prod-srv.html#dateien_1","text":"","title":"Dateien"},{"location":"prod-srv.html#omim_1","text":"In der Regel werden die ben\u00f6tigten Dateien vom Redaktionsserver aus automatisch aktualisiert. Falls dennoch Handlungsbedarf besteht, werden Sie explizit dazu aufgefordert.","title":"OMIM"},{"location":"prod-srv.html#omeka_1","text":"Vergewissern Sie sich, dass Sie sich im Ordner von Omeka in der richtigen Git-Branch befinden und checken Sie ggf. die erforderlioche Branch aus. F\u00fchren Sie dann den git pull bzw. git fetch und git merge Befehl aus.","title":"Omeka"},{"location":"prod-srv.html#sprachdateien-cache","text":"Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem jeweiligen Server an. Dieser muss nach Aktualisierungen von Omeka, die die Sprachdateien betreffen (wir weisen entsprechend im Ticket darauf hin), vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht unmittelbar wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Servern nach der Aktualisierung von Omeka bitte l\u00f6schen. Die Dateien werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Sprachdateien Cache"},{"location":"updates.html","text":"Aktualisierungen \u00b6 Aktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories. Bei Updates von OMIM \u00fcber dieses Repository auf der \"master\" -Branch. Bei Updates von Omeka \u00fcber dieses Repository auf der \"master\" -Branch. Aktualisierungen von Testservern Bei der Aktualisierungen von Testservern, verwenden Sie bitte immer die develop-Branch ! Bei Updates die lokalen Repositories dann entsprechend mit git pull aktualisieren. Sprachdateien Cache \u00b6 Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an. Dieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen. Sie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Updates"},{"location":"updates.html#aktualisierungen","text":"Aktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories. Bei Updates von OMIM \u00fcber dieses Repository auf der \"master\" -Branch. Bei Updates von Omeka \u00fcber dieses Repository auf der \"master\" -Branch. Aktualisierungen von Testservern Bei der Aktualisierungen von Testservern, verwenden Sie bitte immer die develop-Branch ! Bei Updates die lokalen Repositories dann entsprechend mit git pull aktualisieren.","title":"Aktualisierungen"},{"location":"updates.html#sprachdateien-cache","text":"Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an. Dieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen. Sie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Sprachdateien Cache"}]}