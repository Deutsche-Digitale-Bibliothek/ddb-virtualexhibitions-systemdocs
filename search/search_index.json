{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Stand: 16.07.2019 Version: 2.0.5 Omeka Multiinstanz Manager - OMIM \u00b6 OMIM erm\u00f6glicht das Bereitstellen und die Verwaltung von Omeka Instanzen. Es setzt dabei eine Produktionslinie von min. zwei Servern voraus. Entwicklungs- bzw. Redaktionsserver (Ausstellungsredaktionssystem) Produktions- bzw. Liveserver (Mutterinstanz) bzw. Produktions-Ausspielungsserver mit 1-n Servern (f\u00fcr Loadbalancing) OMIM wird auf dem Redaktionsserver installiert und eingerichtet. Die Software erm\u00f6glicht das Ver\u00f6ffentlichen von Instanzen auf den Ausspielungsservern. Testserver \u00b6 Bei der Einrichtung von Testservern, ist das Vorgehen grunds\u00e4tzlich identisch zu dem im Folgenden beschriebenen. Allerdings wird dort, sowohl von OMIM als auch DDB Omeka die develop-Branch bei GitHub verwendet: DDB Virtualexhibitions Manager - develop DDB Omeka - develop","title":"Einleitung"},{"location":"index.html#omeka-multiinstanz-manager-omim","text":"OMIM erm\u00f6glicht das Bereitstellen und die Verwaltung von Omeka Instanzen. Es setzt dabei eine Produktionslinie von min. zwei Servern voraus. Entwicklungs- bzw. Redaktionsserver (Ausstellungsredaktionssystem) Produktions- bzw. Liveserver (Mutterinstanz) bzw. Produktions-Ausspielungsserver mit 1-n Servern (f\u00fcr Loadbalancing) OMIM wird auf dem Redaktionsserver installiert und eingerichtet. Die Software erm\u00f6glicht das Ver\u00f6ffentlichen von Instanzen auf den Ausspielungsservern.","title":"Omeka Multiinstanz Manager - OMIM"},{"location":"index.html#testserver","text":"Bei der Einrichtung von Testservern, ist das Vorgehen grunds\u00e4tzlich identisch zu dem im Folgenden beschriebenen. Allerdings wird dort, sowohl von OMIM als auch DDB Omeka die develop-Branch bei GitHub verwendet: DDB Virtualexhibitions Manager - develop DDB Omeka - develop","title":"Testserver"},{"location":"cheatsheet.html","text":"Erl\u00e4uterung der verwendeten Zeichen und Symbole \u00b6 Listen \u00b6 Unsortierte Listen \u00b6 Rot Gr\u00fcn Blau Sortierte Listen \u00b6 Hund Katze Maus Umbr\u00fcche in Listen \u00b6 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Listenpunkte mit mehreren Abs\u00e4tzen \u00b6 Dies ist eine Listenpunkt mit zwei Abs\u00e4tzen. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. Horizontale Linien \u00b6 Links \u00b6 Ein Link zu google zum Bseipsiel. Dies ist ein Beispiel f\u00fcr einen Referenz-Link. Betonung \u00b6 Einzelne Sternchen Einzelne Unterstriche Doppelte Sternchen Doppelte Unterstriche Tabellen \u00b6 First Header Second Header Third Header Left Center Right Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero laboriosam quaerat maiores non, natus necessitatibus earum recusandae consectetur omnis pariatur architecto esse! Magni quibusdam nisi vero, in voluptas quia a! Code Bl\u00f6cke \u00b6 PHP \u00b6 <?php define ( 'MY_CONST' , \"My Constant\" ); $foo = new Bar (); if ( $foo -> baz ( MY_CONST ) !== true ) { // do something ... } ?> JS \u00b6 ( function () { const foo = 'bar' ; let baz = function () { alert ( 'Hello ' + foo ); } baz (); })(); Zeilennummerierung \u00b6 1 2 3 4 5 6 7 ( function () { const foo = 'bar' ; let baz = function () { alert ( 'Hello ' + foo ); } baz (); })(); Zeilennummerierung und Hervorhebung (44, 46) \u00b6 42 43 44 45 46 47 // Eine Datei ab Zeile 42 ... import foo . bar import boo . baz import foo . bar . baz function init () { } Code innerhalb von Flie\u00dftext ist auch m\u00f6glich, z.B. var test = 0 ; etc. HTML Attribute \u00b6 Dieser Absatz hat foo und bar als class . Hinweise \u00b6 Eine Notiz \u00b6 Eine Notiz Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Ein Tipp \u00b6 Ein Tipp Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Eine Warnung \u00b6 Eine Warnung Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Ein Gefahrenhinweis \u00b6 Ein Gefahrenhinweis Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Fu\u00dfnoten \u00b6 Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2 Aufgabenlisten \u00b6 item 1 item A item B more text item a item b item c item C item 2 item 3 SmartSymbols \u00b6 \u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc, \u2154, \u215a 1 st 2 nd 3 rd Marker \u00b6 mark me Inhalts\u00fcbersicht: \u00b6 Erl\u00e4uterung der verwendeten Zeichen und Symbole Listen Unsortierte Listen Sortierte Listen Umbr\u00fcche in Listen Listenpunkte mit mehreren Abs\u00e4tzen Horizontale Linien Links Betonung Tabellen Code Bl\u00f6cke PHP JS Zeilennummerierung Zeilennummerierung und Hervorhebung (44, 46) HTML Attribute Hinweise Eine Notiz Ein Tipp Eine Warnung Ein Gefahrenhinweis Fu\u00dfnoten Aufgabenlisten SmartSymbols Marker Inhalts\u00fcbersicht: Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Erl\u00e4uterung der verwendeten Zeichen und Symbole"},{"location":"cheatsheet.html#erlauterung-der-verwendeten-zeichen-und-symbole","text":"","title":"Erl\u00e4uterung der verwendeten Zeichen und Symbole"},{"location":"cheatsheet.html#listen","text":"","title":"Listen"},{"location":"cheatsheet.html#unsortierte-listen","text":"Rot Gr\u00fcn Blau","title":"Unsortierte Listen"},{"location":"cheatsheet.html#sortierte-listen","text":"Hund Katze Maus","title":"Sortierte Listen"},{"location":"cheatsheet.html#umbruche-in-listen","text":"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.","title":"Umbr\u00fcche in Listen"},{"location":"cheatsheet.html#listenpunkte-mit-mehreren-absatzen","text":"Dies ist eine Listenpunkt mit zwei Abs\u00e4tzen. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.","title":"Listenpunkte mit mehreren Abs\u00e4tzen"},{"location":"cheatsheet.html#horizontale-linien","text":"","title":"Horizontale Linien"},{"location":"cheatsheet.html#links","text":"Ein Link zu google zum Bseipsiel. Dies ist ein Beispiel f\u00fcr einen Referenz-Link.","title":"Links"},{"location":"cheatsheet.html#betonung","text":"Einzelne Sternchen Einzelne Unterstriche Doppelte Sternchen Doppelte Unterstriche","title":"Betonung"},{"location":"cheatsheet.html#tabellen","text":"First Header Second Header Third Header Left Center Right Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vero laboriosam quaerat maiores non, natus necessitatibus earum recusandae consectetur omnis pariatur architecto esse! Magni quibusdam nisi vero, in voluptas quia a!","title":"Tabellen"},{"location":"cheatsheet.html#code-blocke","text":"","title":"Code Bl\u00f6cke"},{"location":"cheatsheet.html#php","text":"<?php define ( 'MY_CONST' , \"My Constant\" ); $foo = new Bar (); if ( $foo -> baz ( MY_CONST ) !== true ) { // do something ... } ?>","title":"PHP"},{"location":"cheatsheet.html#js","text":"( function () { const foo = 'bar' ; let baz = function () { alert ( 'Hello ' + foo ); } baz (); })();","title":"JS"},{"location":"cheatsheet.html#zeilennummerierung","text":"1 2 3 4 5 6 7 ( function () { const foo = 'bar' ; let baz = function () { alert ( 'Hello ' + foo ); } baz (); })();","title":"Zeilennummerierung"},{"location":"cheatsheet.html#zeilennummerierung-und-hervorhebung-44-46","text":"42 43 44 45 46 47 // Eine Datei ab Zeile 42 ... import foo . bar import boo . baz import foo . bar . baz function init () { } Code innerhalb von Flie\u00dftext ist auch m\u00f6glich, z.B. var test = 0 ; etc.","title":"Zeilennummerierung und Hervorhebung (44, 46)"},{"location":"cheatsheet.html#html-attribute","text":"Dieser Absatz hat foo und bar als class .","title":"HTML Attribute"},{"location":"cheatsheet.html#hinweise","text":"","title":"Hinweise"},{"location":"cheatsheet.html#eine-notiz","text":"Eine Notiz Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Eine Notiz"},{"location":"cheatsheet.html#ein-tipp","text":"Ein Tipp Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Ein Tipp"},{"location":"cheatsheet.html#eine-warnung","text":"Eine Warnung Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Eine Warnung"},{"location":"cheatsheet.html#ein-gefahrenhinweis","text":"Ein Gefahrenhinweis Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Ein Gefahrenhinweis"},{"location":"cheatsheet.html#funoten","text":"Lorem ipsum 1 dolor sit amet, consectetur adipiscing elit. 2","title":"Fu\u00dfnoten"},{"location":"cheatsheet.html#aufgabenlisten","text":"item 1 item A item B more text item a item b item c item C item 2 item 3","title":"Aufgabenlisten"},{"location":"cheatsheet.html#smartsymbols","text":"\u2122 \u00a9 \u00ae \u2105 \u00b1 \u2192 \u2190 \u2194 \u2260 \u00bc, \u2154, \u215a 1 st 2 nd 3 rd","title":"SmartSymbols"},{"location":"cheatsheet.html#marker","text":"mark me","title":"Marker"},{"location":"cheatsheet.html#inhaltsubersicht","text":"Erl\u00e4uterung der verwendeten Zeichen und Symbole Listen Unsortierte Listen Sortierte Listen Umbr\u00fcche in Listen Listenpunkte mit mehreren Abs\u00e4tzen Horizontale Linien Links Betonung Tabellen Code Bl\u00f6cke PHP JS Zeilennummerierung Zeilennummerierung und Hervorhebung (44, 46) HTML Attribute Hinweise Eine Notiz Ein Tipp Eine Warnung Ein Gefahrenhinweis Fu\u00dfnoten Aufgabenlisten SmartSymbols Marker Inhalts\u00fcbersicht: Lorem ipsum dolor sit amet, consectetur adipiscing elit. \u21a9 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. \u21a9","title":"Inhalts\u00fcbersicht:"},{"location":"config.html","text":"Konfiguration \u00b6 Es k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden. DDB Video-Quellen \u00b6 In der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php k\u00f6nnen die Schl\u00fcssel der Eigenschaft $config ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden: ddbXmlSrv Server mit XML Daten ddbIIFResHelperSrvPrefix Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen ddbIIIFSrvPrefix IIIF Server mit Bilddateien ddbVideoSrvPrefix Server mit Videodateien Lizenz-Shortcodes \u00b6 In der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php in der Methode getLicenseFromShortcode k\u00f6nnen in der Variable $licenses die Lizenz-Shortcodes angepasst werden. Der Aufbau der jeweiligen Eintr\u00e4ge ist: 'SHORTCODE' => array( 'name' => 'Name der Lizenz', 'link' => 'URL zu der Lizenzdefinition', 'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons' ) Beim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden. HTML Format f\u00fcr Icons: <i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i> Die Grafikdatei f\u00fcr die Icons befindet sich unter: <root-der-installation>/lib/omeka/themes/ddb/images/licenses.png CSS-Definitionen sind in der Datei: <root-der-installation>/lib/omeka/themes/ddb/css/style.css Definierte CSS-Class-Selektoren: .license-by .license-nd .license-nc .license-sa .license-pd .license-pdzero .license-rr .license-or .license-vw DDB Basis-URL \u00b6 Zur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable $ddbBaseDomain in den Dateien ddb-virtualexhibitions/omeka/themes/ddb/common/header.php ddb-virtualexhibitions/omeka/themes/ddb/common/footer.php angepasst werden.","title":"Konfiguration"},{"location":"config.html#konfiguration","text":"Es k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden.","title":"Konfiguration"},{"location":"config.html#ddb-video-quellen","text":"In der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php k\u00f6nnen die Schl\u00fcssel der Eigenschaft $config ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden: ddbXmlSrv Server mit XML Daten ddbIIFResHelperSrvPrefix Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen ddbIIIFSrvPrefix IIIF Server mit Bilddateien ddbVideoSrvPrefix Server mit Videodateien","title":"DDB Video-Quellen"},{"location":"config.html#lizenz-shortcodes","text":"In der Datei ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php in der Methode getLicenseFromShortcode k\u00f6nnen in der Variable $licenses die Lizenz-Shortcodes angepasst werden. Der Aufbau der jeweiligen Eintr\u00e4ge ist: 'SHORTCODE' => array( 'name' => 'Name der Lizenz', 'link' => 'URL zu der Lizenzdefinition', 'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons' ) Beim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden. HTML Format f\u00fcr Icons: <i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i> Die Grafikdatei f\u00fcr die Icons befindet sich unter: <root-der-installation>/lib/omeka/themes/ddb/images/licenses.png CSS-Definitionen sind in der Datei: <root-der-installation>/lib/omeka/themes/ddb/css/style.css Definierte CSS-Class-Selektoren: .license-by .license-nd .license-nc .license-sa .license-pd .license-pdzero .license-rr .license-or .license-vw","title":"Lizenz-Shortcodes"},{"location":"config.html#ddb-basis-url","text":"Zur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable $ddbBaseDomain in den Dateien ddb-virtualexhibitions/omeka/themes/ddb/common/header.php ddb-virtualexhibitions/omeka/themes/ddb/common/footer.php angepasst werden.","title":"DDB Basis-URL"},{"location":"dev-srv.html","text":"Redaktionsserver \u00b6 MySQL Datenbank \u00b6 Bei Updates \u00b6 Die bereits existierende Datenabnk kann weiter verwendet werden. Erst-Installation \u00b6 Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Sie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie einmalig auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen. Dateien \u00b6 Vorbereitung bei Upgrade auf Git-Verion \u00b6 Falls Sie ein Upgrade auf die Git-Version durchf\u00fchren, sichern Sie zun\u00e4chst alle Dateien aus dem Verzeichnis app/config und die SSH-Schl\u00fcssel aus dem Verzeichnis data/rsa/ , sowie die bereits vorhandenen Omneka Instanzen aus dem Ordner public ! Das sind alle Verzeichnisse unter public au\u00dfer diesen: js css fonts assets packages Installation \u00b6 Klonen Sie zun\u00e4chst das Repository f\u00fcr OMIM in eine leeres Verzeichnis auf Server. Installation von Testservern Bei der installation von Testservern, verwenden Sie bitte immer von beiden Repositorien die develop-Branch ! Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass der Benutzer bzw. die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat. Dazu sollten die Berechtigungen gesetzt sein, indem die Gruppe gleich der prim\u00e4ren Gruppe von Apache / PHP ist (i.d.R. www-data ) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664 gesetzt sind. Klonen jetzt Sie das Repository direkt in den Unterordner lib . Verwenden sie dazu den Befehl git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master um das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit lib/omeka ). Falls Sie das Argument --branch master am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit git checkout master . Der aktuelle Branch ist master Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master-Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten. Nur bei der Installation auf Testservern verwenden Sie bitte die develop-Branch. Bei einer Upgrade-Installation Verschieben oder kopieren Sie jetzt, die im vorigen Schritt gesicherten, Dateien und Ordner an Ihre jeweiligen Orte ( app/config , data/rsa/ , public )! Achten Sie darauf, dass in der Apache Serverkonfiguration das DOCUMENT_ROOT von der Dom\u00e4ne auf das public Verzeichnis zeigt. Konfiguration \u00b6 Upgrade Installation Wenn Sie eine Upgrade Installation durchf\u00fchren, brauchen Sie die Konfigurationsdateien nicht weiter anzupassen, sondern nur aus der Sicherung zu \u00fcbernehmen. Benennen Sie zun\u00e4chst in dem Ornder app/config folgende Dateien um: app.sample.php zu app.php database.sample.php zu database.php omim.sample.php zu omim.php Hier der f\u00fcr die Konfiguration relevanten Dateien: (Alle anderen Konfigurationsdateien k\u00f6nnnen mit den Standardeinstellungen beibehalten werden) app config app.php database.php mail.php omim.php data rsa ddb_rsa ddb_rsa.pub public app/config/app.php \u00b6 Allgemeine Konfiguration des OMIM 'debug' Standardwert: false Falls true werden bei Fehlern des OMIM detaillierte Meldungen angezeigt 'url' Standardwert: 'http://redaktion.tld' Hier bitte die URL des Redaktionsservers angeben 'key' Standardwert: 'R5rt8vDRd3z75QyPqwEk1q88y5sCIH08' Hier bitte einen 32 Zeichen lange Zeichenkette eingeben app/config/database.php \u00b6 Datenbankeinstellungen des Redaktionsservers Relevanter Konfigurationsabschnitt: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 <?php // ... 'connections' => array ( 'mysql' => array ( 'driver' => 'mysql' , 'host' => 'localhost' , 'unix_socket' => '/tmp/mysql5.sock' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'prefix' => '' , ), ), // ... Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein (s.o. unter \"MySQL Datenbank\"). Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an. app/config/mail.php \u00b6 Sollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein. app/config/omim.php \u00b6 Spezifische Konfiguration f\u00fcr die OMIM Anwendung. Aktualisierungen und neue Versionen von OMIM Beachten Sie, dass die Eintr\u00e4ge in der aktuellen omim.sample.php, unter dem Schl\u00fcssel 'common' => 'db' => 'tables' mit ihrer Konfiguration \u00fcbereinstimmen m\u00fcssen! Relevanter Konfigurationsabschnitt f\u00fcr Development- und Remote-Server: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <?php // ... 'development' => array ( 'user' => array ( 'group' => 'www-data' ) ), 'remote' => array ( 0 => array ( 'production' => array ( 'http' => array ( 'url' => 'http://live.tld' ), 'ssh' => array ( 'host' => 'live.tld' , 'port' => '22' , 'username' => 'Benutzername f\u00fcr SSH' , 'key' => '/path/to/private/rsa/key/file' , 'docroot' => '/path/to/document_root/on/live/server' , 'datadir' => '/path/to/data/dir/on/live/server' , 'group' => 'www-data' ), 'db' => array ( 'host' => 'localhost' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'unix_socket' => '/tmp/mysql5.sock' , ) ) ), 1 => array ( 'production' => array ( 'http' => array ( 'url' => 'http://live-two.tld' ), 'ssh' => array ( 'host' => 'live-two.tld' , 'port' => '22' , 'username' => 'Benutzername f\u00fcr SSH' , 'key' => '/path/to/private/rsa/key/file' , 'docroot' => '/path/to/document_root/on/live/server' , 'datadir' => '/path/to/data/dir/on/live/server' , 'group' => 'www-data' ), 'db' => array ( 'host' => 'localhost' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'unix_socket' => '/tmp/mysql5.sock' , ) ) ), ) // ... Tragen Sie unter ['development']['user']['group'] die Apache Benutzergruppe des Redaktionsservers ein. Tragen Sie unter ['remote']['n']['production']['http']['url'] die URL des jeweiligen Ausspielungsservers ein. Tragen Sie unter ['remote']['n']['production']['ssh']['host'] den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein. Tragen Sie unter ['remote']['n']['production']['ssh']['port'] den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist. Tragen Sie unter ['remote']['n']['production']['ssh']['username'] den Namen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein. Tragen Sie unter ['remote']['n']['production']['ssh']['key'] den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei, mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Es empfiehlt sich selbst einen neuen RSA-Key auf dem Redaktionsserver zu erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die authorized_keys Datei des Benutzers (unter home/benutzername/.ssh/authorized_keys ) importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte. Tragen Sie unter ['remote']['n']['production']['ssh']['docroot'] den absoluten Pfad zu dem in der Apache-Konfiguration (Virtaul Host) festgelegten DOCUMENT_ROOT des Ausspielungsservers ein. Beachten sie, dass dieser zwingend auf das Verzeichnis public des Ausspielungsservers zeigen muss (s.u.) Tragen Sie unter ['remote']['n']['production']['ssh']['datadir'] den absulten Pfad zu dem data Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis data des Ausspielungsservers zeigen muss. Tragen Sie unter ['remote']['n']['production']['ssh']['group'] die Gruppe ein, unter der Apache / PHP auf dem Ausspielungsserver ausgef\u00fchrt wird. Tragen Sie in den Unterschl\u00fcsseln von ['remote']['n']['production']['db'] die Datenbankangaben f\u00fcr den Ausspielungsserver ein. Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Ausspielungsserver ein (s.u. unter \"MySQL Datenbank\"). Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an. Beachten Sie, dass diese Einstellungen in die Omeka-DB-INI-Dateien auf dem Ausspielungsserver \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den Ausspielungsserver bezieht. data/rsa/ddb/_rsa und data/rsa/ddb/_rsa.pub \u00b6 Private und \u00f6ffentliche Schl\u00fcsseldatei zur Verwendung f\u00fcr die Authentifizierung bei SSH-Verbindungen. Bitte generieren Sie aus Sicherheitsgr\u00fcnden selbst ein Schl\u00fcsselpaar (s.o.). public \u00b6 Dieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das DOCUMENT_ROOT der Dom\u00e4ne sein (s.o). \u00dcbernehmen Sie bei einer Upgrade-Installation alle Verzeichnisse von bereits angelegten Instanzen. Konvertieren vorhander Ausstellungen \u00b6 Um bereits vorhandene Ausstellungen zu konvertieren, kopieren Sie aus data/deploy.tar.gz die Dateien: files/layout/pagethumbnail/default-page-icon.jpg files/layout/pagethumbnail/default-summary-icon.jpg bootstrap.php index.php in alle Verzeichnisse von Ausstellungs-Instanzen unter public und ersetzen so alle alten Dateien. Cronjobs \u00b6 Um erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein. F\u00fcr den Cronjob finden Sie im OMIM die cron.php . Aktualisieren Sie Ihr Repository, falls die Datei auf Ihrem Server noch nicht vorhanden ist. Sie k\u00f6nnen in der cron.php-Datei unter $threshold = 1 * 24 * 60 * 60; // a day; die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis public/downloads gel\u00f6scht. Damit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl php -v eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl whereis php . Die Ausgabe sollte i.d.R. den Pfad /usr/bin/php enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren: /usr/bin/php -v . Richten Sie Crontab ( crontab -e ) ein. F\u00fcgen Sie eine Zeile hinzu mit: 1 0 0 * * * php /pfad/auf/server/zu/cron.php Alternativ setzen sie den vollen Pfad zur PHP-Executable: 1 0 0 * * * /usr/bin/php /pfad/auf/server/zu/cron.php In dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern. Lese- und Schreibrechte des Benutzers Beachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte f\u00fcr die Dateien im Verzeichnis public/downloads haben muss! Sollte das nicht der Fall sein, konfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt.","title":"Redaktionsserver"},{"location":"dev-srv.html#redaktionsserver","text":"","title":"Redaktionsserver"},{"location":"dev-srv.html#mysql-datenbank","text":"","title":"MySQL Datenbank"},{"location":"dev-srv.html#bei-updates","text":"Die bereits existierende Datenabnk kann weiter verwendet werden.","title":"Bei Updates"},{"location":"dev-srv.html#erst-installation","text":"Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Sie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie einmalig auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen.","title":"Erst-Installation"},{"location":"dev-srv.html#dateien","text":"","title":"Dateien"},{"location":"dev-srv.html#vorbereitung-bei-upgrade-auf-git-verion","text":"Falls Sie ein Upgrade auf die Git-Version durchf\u00fchren, sichern Sie zun\u00e4chst alle Dateien aus dem Verzeichnis app/config und die SSH-Schl\u00fcssel aus dem Verzeichnis data/rsa/ , sowie die bereits vorhandenen Omneka Instanzen aus dem Ordner public ! Das sind alle Verzeichnisse unter public au\u00dfer diesen: js css fonts assets packages","title":"Vorbereitung bei Upgrade auf Git-Verion"},{"location":"dev-srv.html#installation","text":"Klonen Sie zun\u00e4chst das Repository f\u00fcr OMIM in eine leeres Verzeichnis auf Server. Installation von Testservern Bei der installation von Testservern, verwenden Sie bitte immer von beiden Repositorien die develop-Branch ! Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass der Benutzer bzw. die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat. Dazu sollten die Berechtigungen gesetzt sein, indem die Gruppe gleich der prim\u00e4ren Gruppe von Apache / PHP ist (i.d.R. www-data ) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664 gesetzt sind. Klonen jetzt Sie das Repository direkt in den Unterordner lib . Verwenden sie dazu den Befehl git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master um das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit lib/omeka ). Falls Sie das Argument --branch master am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit git checkout master . Der aktuelle Branch ist master Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master-Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten. Nur bei der Installation auf Testservern verwenden Sie bitte die develop-Branch. Bei einer Upgrade-Installation Verschieben oder kopieren Sie jetzt, die im vorigen Schritt gesicherten, Dateien und Ordner an Ihre jeweiligen Orte ( app/config , data/rsa/ , public )! Achten Sie darauf, dass in der Apache Serverkonfiguration das DOCUMENT_ROOT von der Dom\u00e4ne auf das public Verzeichnis zeigt.","title":"Installation"},{"location":"dev-srv.html#konfiguration","text":"Upgrade Installation Wenn Sie eine Upgrade Installation durchf\u00fchren, brauchen Sie die Konfigurationsdateien nicht weiter anzupassen, sondern nur aus der Sicherung zu \u00fcbernehmen. Benennen Sie zun\u00e4chst in dem Ornder app/config folgende Dateien um: app.sample.php zu app.php database.sample.php zu database.php omim.sample.php zu omim.php Hier der f\u00fcr die Konfiguration relevanten Dateien: (Alle anderen Konfigurationsdateien k\u00f6nnnen mit den Standardeinstellungen beibehalten werden) app config app.php database.php mail.php omim.php data rsa ddb_rsa ddb_rsa.pub public","title":"Konfiguration"},{"location":"dev-srv.html#appconfigappphp","text":"Allgemeine Konfiguration des OMIM 'debug' Standardwert: false Falls true werden bei Fehlern des OMIM detaillierte Meldungen angezeigt 'url' Standardwert: 'http://redaktion.tld' Hier bitte die URL des Redaktionsservers angeben 'key' Standardwert: 'R5rt8vDRd3z75QyPqwEk1q88y5sCIH08' Hier bitte einen 32 Zeichen lange Zeichenkette eingeben","title":"app/config/app.php"},{"location":"dev-srv.html#appconfigdatabasephp","text":"Datenbankeinstellungen des Redaktionsservers Relevanter Konfigurationsabschnitt: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 <?php // ... 'connections' => array ( 'mysql' => array ( 'driver' => 'mysql' , 'host' => 'localhost' , 'unix_socket' => '/tmp/mysql5.sock' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'prefix' => '' , ), ), // ... Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein (s.o. unter \"MySQL Datenbank\"). Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an.","title":"app/config/database.php"},{"location":"dev-srv.html#appconfigmailphp","text":"Sollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein.","title":"app/config/mail.php"},{"location":"dev-srv.html#appconfigomimphp","text":"Spezifische Konfiguration f\u00fcr die OMIM Anwendung. Aktualisierungen und neue Versionen von OMIM Beachten Sie, dass die Eintr\u00e4ge in der aktuellen omim.sample.php, unter dem Schl\u00fcssel 'common' => 'db' => 'tables' mit ihrer Konfiguration \u00fcbereinstimmen m\u00fcssen! Relevanter Konfigurationsabschnitt f\u00fcr Development- und Remote-Server: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 <?php // ... 'development' => array ( 'user' => array ( 'group' => 'www-data' ) ), 'remote' => array ( 0 => array ( 'production' => array ( 'http' => array ( 'url' => 'http://live.tld' ), 'ssh' => array ( 'host' => 'live.tld' , 'port' => '22' , 'username' => 'Benutzername f\u00fcr SSH' , 'key' => '/path/to/private/rsa/key/file' , 'docroot' => '/path/to/document_root/on/live/server' , 'datadir' => '/path/to/data/dir/on/live/server' , 'group' => 'www-data' ), 'db' => array ( 'host' => 'localhost' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'unix_socket' => '/tmp/mysql5.sock' , ) ) ), 1 => array ( 'production' => array ( 'http' => array ( 'url' => 'http://live-two.tld' ), 'ssh' => array ( 'host' => 'live-two.tld' , 'port' => '22' , 'username' => 'Benutzername f\u00fcr SSH' , 'key' => '/path/to/private/rsa/key/file' , 'docroot' => '/path/to/document_root/on/live/server' , 'datadir' => '/path/to/data/dir/on/live/server' , 'group' => 'www-data' ), 'db' => array ( 'host' => 'localhost' , 'database' => 'Name der Datenbank' , 'username' => 'Benutzername' , 'password' => 'Passwort' , 'charset' => 'utf8' , 'collation' => 'utf8_unicode_ci' , 'unix_socket' => '/tmp/mysql5.sock' , ) ) ), ) // ... Tragen Sie unter ['development']['user']['group'] die Apache Benutzergruppe des Redaktionsservers ein. Tragen Sie unter ['remote']['n']['production']['http']['url'] die URL des jeweiligen Ausspielungsservers ein. Tragen Sie unter ['remote']['n']['production']['ssh']['host'] den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein. Tragen Sie unter ['remote']['n']['production']['ssh']['port'] den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist. Tragen Sie unter ['remote']['n']['production']['ssh']['username'] den Namen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein. Tragen Sie unter ['remote']['n']['production']['ssh']['key'] den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei, mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Es empfiehlt sich selbst einen neuen RSA-Key auf dem Redaktionsserver zu erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die authorized_keys Datei des Benutzers (unter home/benutzername/.ssh/authorized_keys ) importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte. Tragen Sie unter ['remote']['n']['production']['ssh']['docroot'] den absoluten Pfad zu dem in der Apache-Konfiguration (Virtaul Host) festgelegten DOCUMENT_ROOT des Ausspielungsservers ein. Beachten sie, dass dieser zwingend auf das Verzeichnis public des Ausspielungsservers zeigen muss (s.u.) Tragen Sie unter ['remote']['n']['production']['ssh']['datadir'] den absulten Pfad zu dem data Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis data des Ausspielungsservers zeigen muss. Tragen Sie unter ['remote']['n']['production']['ssh']['group'] die Gruppe ein, unter der Apache / PHP auf dem Ausspielungsserver ausgef\u00fchrt wird. Tragen Sie in den Unterschl\u00fcsseln von ['remote']['n']['production']['db'] die Datenbankangaben f\u00fcr den Ausspielungsserver ein. Tragen Sie unter database , username und password die Angaben f\u00fcr die MySQL-Datenbank auf dem Ausspielungsserver ein (s.u. unter \"MySQL Datenbank\"). Passen Sie ggf. den Pfad unix_socket zu der Unix Socket Datei an. Beachten Sie, dass diese Einstellungen in die Omeka-DB-INI-Dateien auf dem Ausspielungsserver \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den Ausspielungsserver bezieht.","title":"app/config/omim.php"},{"location":"dev-srv.html#datarsaddb_rsa-und-datarsaddb_rsapub","text":"Private und \u00f6ffentliche Schl\u00fcsseldatei zur Verwendung f\u00fcr die Authentifizierung bei SSH-Verbindungen. Bitte generieren Sie aus Sicherheitsgr\u00fcnden selbst ein Schl\u00fcsselpaar (s.o.).","title":"data/rsa/ddb/_rsa und data/rsa/ddb/_rsa.pub"},{"location":"dev-srv.html#public","text":"Dieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das DOCUMENT_ROOT der Dom\u00e4ne sein (s.o). \u00dcbernehmen Sie bei einer Upgrade-Installation alle Verzeichnisse von bereits angelegten Instanzen.","title":"public"},{"location":"dev-srv.html#konvertieren-vorhander-ausstellungen","text":"Um bereits vorhandene Ausstellungen zu konvertieren, kopieren Sie aus data/deploy.tar.gz die Dateien: files/layout/pagethumbnail/default-page-icon.jpg files/layout/pagethumbnail/default-summary-icon.jpg bootstrap.php index.php in alle Verzeichnisse von Ausstellungs-Instanzen unter public und ersetzen so alle alten Dateien.","title":"Konvertieren vorhander Ausstellungen"},{"location":"dev-srv.html#cronjobs","text":"Um erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein. F\u00fcr den Cronjob finden Sie im OMIM die cron.php . Aktualisieren Sie Ihr Repository, falls die Datei auf Ihrem Server noch nicht vorhanden ist. Sie k\u00f6nnen in der cron.php-Datei unter $threshold = 1 * 24 * 60 * 60; // a day; die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis public/downloads gel\u00f6scht. Damit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl php -v eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl whereis php . Die Ausgabe sollte i.d.R. den Pfad /usr/bin/php enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren: /usr/bin/php -v . Richten Sie Crontab ( crontab -e ) ein. F\u00fcgen Sie eine Zeile hinzu mit: 1 0 0 * * * php /pfad/auf/server/zu/cron.php Alternativ setzen sie den vollen Pfad zur PHP-Executable: 1 0 0 * * * /usr/bin/php /pfad/auf/server/zu/cron.php In dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern. Lese- und Schreibrechte des Benutzers Beachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte f\u00fcr die Dateien im Verzeichnis public/downloads haben muss! Sollte das nicht der Fall sein, konfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt.","title":"Cronjobs"},{"location":"install.html","text":"Allgemeine Anforderungen \u00b6 Die Installation erfolgt auf *nix-Servern mit eingerichteter LAMP Konfiguration. Voraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann. Die Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen. F\u00fcr diese Dokumentation wird f\u00fcr die Beispiele und Erl\u00e4uterungen der Redaktionsserver mit der Beispieldom\u00e4ne redaktion.tld und der Ausspielungsserver mit live.tld sowie live-two.tld gleichgesetzt. Apache Server \u00b6 Auf allen Apache http-Servern (Entwicklung und Produktion) m\u00fcssen mindestens folgende Module installiert und aktiviert sein: deflate mime rewrite Das Modul rewrite muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein. Dar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option FollowSymLinks muss gesetzt sein. MySQL Server \u00b6 Version 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET PHP \u00b6 Version 5.4 oder h\u00f6her. Erforderliche Module/Extensions: MCrypt PHP JSON MYSQLI und PDO_MySQL EXIF php-imagick cURL Bitte die Einstellungen f\u00fcr gro\u00dfe Dateiuploads innerhalb Omeka (z.B. Audiodateien) insbes. auf dem Redaktionsserver in der php.ini anpassen. Empfohlene Werte: max_execution_time = 7200 max_input_time = 7200 memory_limit = 256M post_max_size = 200M upload_max_filesize = 200M ImageMagick \u00b6 Muss auf allen Servern installiert sein.","title":"Anforderungen"},{"location":"install.html#allgemeine-anforderungen","text":"Die Installation erfolgt auf *nix-Servern mit eingerichteter LAMP Konfiguration. Voraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann. Die Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen. F\u00fcr diese Dokumentation wird f\u00fcr die Beispiele und Erl\u00e4uterungen der Redaktionsserver mit der Beispieldom\u00e4ne redaktion.tld und der Ausspielungsserver mit live.tld sowie live-two.tld gleichgesetzt.","title":"Allgemeine Anforderungen"},{"location":"install.html#apache-server","text":"Auf allen Apache http-Servern (Entwicklung und Produktion) m\u00fcssen mindestens folgende Module installiert und aktiviert sein: deflate mime rewrite Das Modul rewrite muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein. Dar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option FollowSymLinks muss gesetzt sein.","title":"Apache Server"},{"location":"install.html#mysql-server","text":"Version 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET","title":"MySQL Server"},{"location":"install.html#php","text":"Version 5.4 oder h\u00f6her. Erforderliche Module/Extensions: MCrypt PHP JSON MYSQLI und PDO_MySQL EXIF php-imagick cURL Bitte die Einstellungen f\u00fcr gro\u00dfe Dateiuploads innerhalb Omeka (z.B. Audiodateien) insbes. auf dem Redaktionsserver in der php.ini anpassen. Empfohlene Werte: max_execution_time = 7200 max_input_time = 7200 memory_limit = 256M post_max_size = 200M upload_max_filesize = 200M","title":"PHP"},{"location":"install.html#imagemagick","text":"Muss auf allen Servern installiert sein.","title":"ImageMagick"},{"location":"prod-srv.html","text":"Ausspielungsserver \u00b6 MySQL Datenbank \u00b6 Bei Updates \u00b6 Die bereits existierende Datenabnk kann weiter verwendet werden. Erst-Installation \u00b6 Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Die Datenbank bleibt leer und wird bei der Aktion \"Ver\u00f6ffentlichen\" des OMIM vom Redaktionsserver aus mit Daten bef\u00fcllt. Dateien \u00b6 Bei Updates \u00b6 Erstellen Sie eine Kopie von allen Unterordnern von public . Installation und Konfiguration \u00b6 Erstellen Sie in einem leeren Ordner drei Unterordner: data lib public Speichern Sie aus der Repository des DDB Virtual-Exhibitions-Manager die Dateien .htaccees und deploy.tar.gz . (Sie konnen die ganze Repository als ZIP herunter laden und die Dateien dann aus dem Ordner ddb-virtualexhibitions-manager/data/production/ extrahieren.). Speichern Sie dabei die Datei .htaccees im Ordner public und die Dateien deploy.tar.gz und deploy_lf.tar.gz im Ordner data . Repository f\u00fcr Repository des DDB Virtual-Exhibitions-Manager nicht klonen! Bitte klonen Sie auf Ausspielungsservern das Repository des DDB Virtual-Exhibitions-Manager nicht in das Stammverzeichnis! Die zwei Dateien aus dem Repository m\u00fcssen nur einmalig per Hand kopiert werden. Sp\u00e4ter werden beim Ver\u00f6ffentlichen die Dateien ggf. automatisch erstzt. Klonen jetzt Sie das Repository direkt in den Unterordner lib . Verwenden sie dazu den Befehl git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master um das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit lib/omeka ). Falls Sie das Argument --branch master am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit git checkout master . Der aktuelle Branch ist master Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten. Installation von Testservern Bei der installation von Testservern, verwenden Sie bitte immer die develop-Branch ! Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben. Setzen Sie dazu den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache / PHP (i.d.R. www-data) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664. Falls Sie ein Update vornehmen kopieren Sie die gesicherten Unterordner von public wieder dort hin. Das Verzeichnis public muss in der Apache-Konfiguration des Servers das DOCUMENT_ROOT der Dom\u00e4ne sein. Denken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die authorized_keys Datei einzutragen.","title":"Ausspielungsserver"},{"location":"prod-srv.html#ausspielungsserver","text":"","title":"Ausspielungsserver"},{"location":"prod-srv.html#mysql-datenbank","text":"","title":"MySQL Datenbank"},{"location":"prod-srv.html#bei-updates","text":"Die bereits existierende Datenabnk kann weiter verwendet werden.","title":"Bei Updates"},{"location":"prod-srv.html#erst-installation","text":"Legen Sie bitte eine leere Datenbank mit der Kollation utf8_unicode_ci und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank. Die Datenbank bleibt leer und wird bei der Aktion \"Ver\u00f6ffentlichen\" des OMIM vom Redaktionsserver aus mit Daten bef\u00fcllt.","title":"Erst-Installation"},{"location":"prod-srv.html#dateien","text":"","title":"Dateien"},{"location":"prod-srv.html#bei-updates_1","text":"Erstellen Sie eine Kopie von allen Unterordnern von public .","title":"Bei Updates"},{"location":"prod-srv.html#installation-und-konfiguration","text":"Erstellen Sie in einem leeren Ordner drei Unterordner: data lib public Speichern Sie aus der Repository des DDB Virtual-Exhibitions-Manager die Dateien .htaccees und deploy.tar.gz . (Sie konnen die ganze Repository als ZIP herunter laden und die Dateien dann aus dem Ordner ddb-virtualexhibitions-manager/data/production/ extrahieren.). Speichern Sie dabei die Datei .htaccees im Ordner public und die Dateien deploy.tar.gz und deploy_lf.tar.gz im Ordner data . Repository f\u00fcr Repository des DDB Virtual-Exhibitions-Manager nicht klonen! Bitte klonen Sie auf Ausspielungsservern das Repository des DDB Virtual-Exhibitions-Manager nicht in das Stammverzeichnis! Die zwei Dateien aus dem Repository m\u00fcssen nur einmalig per Hand kopiert werden. Sp\u00e4ter werden beim Ver\u00f6ffentlichen die Dateien ggf. automatisch erstzt. Klonen jetzt Sie das Repository direkt in den Unterordner lib . Verwenden sie dazu den Befehl git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master um das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit lib/omeka ). Falls Sie das Argument --branch master am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit git checkout master . Der aktuelle Branch ist master Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten. Installation von Testservern Bei der installation von Testservern, verwenden Sie bitte immer die develop-Branch ! Verzeichnis- und Dateirechte Es muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben. Setzen Sie dazu den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache / PHP (i.d.R. www-data) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664. Falls Sie ein Update vornehmen kopieren Sie die gesicherten Unterordner von public wieder dort hin. Das Verzeichnis public muss in der Apache-Konfiguration des Servers das DOCUMENT_ROOT der Dom\u00e4ne sein. Denken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die authorized_keys Datei einzutragen.","title":"Installation und Konfiguration"},{"location":"updates.html","text":"Aktualisierungen \u00b6 Aktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories. Bei Updates von OMIM \u00fcber dieses Repository auf der \"master\" -Branch. Bei Updates von Omeka \u00fcber dieses Repository auf der \"master\" -Branch. Aktualisierungen von Testservern Bei der Aktualisierungen von Testservern, verwenden Sie bitte immer die develop-Branch ! Bei Updates die lokalen Repositories dann entsprechend mit git pull aktualisieren. Sprachdateien Cache \u00b6 Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an. Dieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen. Sie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Aktualisierungen"},{"location":"updates.html#aktualisierungen","text":"Aktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories. Bei Updates von OMIM \u00fcber dieses Repository auf der \"master\" -Branch. Bei Updates von Omeka \u00fcber dieses Repository auf der \"master\" -Branch. Aktualisierungen von Testservern Bei der Aktualisierungen von Testservern, verwenden Sie bitte immer die develop-Branch ! Bei Updates die lokalen Repositories dann entsprechend mit git pull aktualisieren.","title":"Aktualisierungen"},{"location":"updates.html#sprachdateien-cache","text":"Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an. Dieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden. Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig /tmp sein sollte. Die Dateinamen fangen immer mit der Zeichenfolge omeka_i18n_cache--- an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen. Sie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.","title":"Sprachdateien Cache"}]}