{
    "docs": [
        {
            "location": "/index.html",
            "text": "Stand:\n 06.11.2018\n\nVersion:\n 2.0.4\n\n\nOmeka Multiinstanz Manager - OMIM\n\u00b6\n\n\nOMIM erm\u00f6glicht das Bereitstellen und die Verwaltung von Omeka Instanzen.\nEs setzt dabei eine Produktionslinie von min. zwei Servern voraus.\n\n\n\n\nEntwicklungs- bzw. Redaktionsserver (Ausstellungsredaktionssystem)\n\n\nProduktions- bzw. Liveserver (Mutterinstanz) bzw. Produktions-Ausspielungsserver mit 1-n Servern (f\u00fcr Loadbalancing)\n\n\n\n\nOMIM wird auf dem Redaktionsserver installiert und eingerichtet.\nDie Software erm\u00f6glicht das Ver\u00f6ffentlichen von Instanzen auf den Ausspielungsservern.\n\n\nTestserver\n\u00b6\n\n\nBei der Einrichtung von Testservern, ist das Vorgehen grunds\u00e4tzlich identisch zu dem im Folgenden beschriebenen. Allerdings wird dort, sowohl von OMIM als auch DDB Omeka die \ndevelop-Branch\n bei GitHub verwendet:\n\n\n\n\nDDB Virtualexhibitions Manager - develop\n\n\nDDB Omeka - develop",
            "title": "Einleitung"
        },
        {
            "location": "/index.html#omeka-multiinstanz-manager-omim",
            "text": "OMIM erm\u00f6glicht das Bereitstellen und die Verwaltung von Omeka Instanzen.\nEs setzt dabei eine Produktionslinie von min. zwei Servern voraus.   Entwicklungs- bzw. Redaktionsserver (Ausstellungsredaktionssystem)  Produktions- bzw. Liveserver (Mutterinstanz) bzw. Produktions-Ausspielungsserver mit 1-n Servern (f\u00fcr Loadbalancing)   OMIM wird auf dem Redaktionsserver installiert und eingerichtet.\nDie Software erm\u00f6glicht das Ver\u00f6ffentlichen von Instanzen auf den Ausspielungsservern.",
            "title": "Omeka Multiinstanz Manager - OMIM"
        },
        {
            "location": "/index.html#testserver",
            "text": "Bei der Einrichtung von Testservern, ist das Vorgehen grunds\u00e4tzlich identisch zu dem im Folgenden beschriebenen. Allerdings wird dort, sowohl von OMIM als auch DDB Omeka die  develop-Branch  bei GitHub verwendet:   DDB Virtualexhibitions Manager - develop  DDB Omeka - develop",
            "title": "Testserver"
        },
        {
            "location": "/install/index.html",
            "text": "Allgemeine Anforderungen\n\u00b6\n\n\nDie Installation erfolgt auf \n*nix-Servern\n mit eingerichteter \nLAMP\n Konfiguration.\n\n\nVoraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann.\n\n\nDie Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen.\n\n\nF\u00fcr diese Dokumentation wird f\u00fcr die Beispiele und Erl\u00e4uterungen der Redaktionsserver mit der Beispieldom\u00e4ne \nredaktion.tld\n und der Ausspielungsserver mit \nlive.tld\n sowie \nlive-two.tld\n gleichgesetzt.\n\n\nApache Server\n\u00b6\n\n\nAuf allen Apache http-Servern (Entwicklung und Produktion) m\u00fcssen mindestens folgende Module installiert und aktiviert sein:\n\n\n\n\ndeflate\n\n\nmime\n\n\nrewrite\n\n\n\n\nDas Modul \nrewrite\n muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein.\n\n\nDar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option \nFollowSymLinks\n muss gesetzt sein.\n\n\nMySQL Server\n\u00b6\n\n\nVersion 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET\n\n\nPHP\n\u00b6\n\n\nVersion 5.4 oder h\u00f6her.\nErforderliche Module/Extensions:\n\n\n\n\nMCrypt\n\n\nPHP JSON\n\n\nMYSQLI und PDO_MySQL\n\n\nEXIF\n\n\nphp-imagick\n\n\ncURL\n\n\n\n\nBitte die Einstellungen f\u00fcr gro\u00dfe Dateiuploads innerhalb Omeka (z.B. Audiodateien) insbes. auf dem Redaktionsserver in der php.ini anpassen.\nEmpfohlene Werte:\n\n\n\n\nmax_execution_time = 7200\n\n\nmax_input_time = 7200\n\n\nmemory_limit = 256M\n\n\npost_max_size = 200M\n\n\nupload_max_filesize = 200M\n\n\n\n\nImageMagick\n\u00b6\n\n\nMuss auf allen Servern installiert sein.",
            "title": "Anforderungen"
        },
        {
            "location": "/install/index.html#allgemeine-anforderungen",
            "text": "Die Installation erfolgt auf  *nix-Servern  mit eingerichteter  LAMP  Konfiguration.  Voraussetzung ist, dass der Redaktionsserver mit den Ausspielungsservern per SSH mit schl\u00fcsselbasierter Authentifizierung kommunizieren kann.  Die Server sollten jeweils \u00fcber nicht weniger als 1GB RAM verf\u00fcgen.  F\u00fcr diese Dokumentation wird f\u00fcr die Beispiele und Erl\u00e4uterungen der Redaktionsserver mit der Beispieldom\u00e4ne  redaktion.tld  und der Ausspielungsserver mit  live.tld  sowie  live-two.tld  gleichgesetzt.",
            "title": "Allgemeine Anforderungen"
        },
        {
            "location": "/install/index.html#apache-server",
            "text": "Auf allen Apache http-Servern (Entwicklung und Produktion) m\u00fcssen mindestens folgende Module installiert und aktiviert sein:   deflate  mime  rewrite   Das Modul  rewrite  muss f\u00fcr .htaccess-Dateien des jeweiligen Hosts erlaubt sein.  Dar\u00fcber hinaus muss in der Apachekonfiguration f\u00fcr den jeweiligen Host die Option  FollowSymLinks  muss gesetzt sein.",
            "title": "Apache Server"
        },
        {
            "location": "/install/index.html#mysql-server",
            "text": "Version 5 oder h\u00f6her und mit Verbindung \u00fcber UNIX-SOCKET",
            "title": "MySQL Server"
        },
        {
            "location": "/install/index.html#php",
            "text": "Version 5.4 oder h\u00f6her.\nErforderliche Module/Extensions:   MCrypt  PHP JSON  MYSQLI und PDO_MySQL  EXIF  php-imagick  cURL   Bitte die Einstellungen f\u00fcr gro\u00dfe Dateiuploads innerhalb Omeka (z.B. Audiodateien) insbes. auf dem Redaktionsserver in der php.ini anpassen.\nEmpfohlene Werte:   max_execution_time = 7200  max_input_time = 7200  memory_limit = 256M  post_max_size = 200M  upload_max_filesize = 200M",
            "title": "PHP"
        },
        {
            "location": "/install/index.html#imagemagick",
            "text": "Muss auf allen Servern installiert sein.",
            "title": "ImageMagick"
        },
        {
            "location": "/dev-srv/index.html",
            "text": "Redaktionsserver\n\u00b6\n\n\nMySQL Datenbank\n\u00b6\n\n\nBei Updates\n\u00b6\n\n\nDie bereits existierende Datenabnk kann weiter verwendet werden.\n\n\nErst-Installation\n\u00b6\n\n\nLegen Sie bitte eine leere Datenbank mit der Kollation \nutf8_unicode_ci\n und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank.\nSie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie \neinmalig\n auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen.\n\n\nDateien\n\u00b6\n\n\nVorbereitung bei Upgrade auf Git-Verion\n\u00b6\n\n\nFalls Sie ein Upgrade auf die Git-Version durchf\u00fchren, sichern Sie zun\u00e4chst alle Dateien aus dem Verzeichnis \napp\\config\n und die SSH-Schl\u00fcssel aus dem Verzeichnis \ndata/rsa/\n, sowie die bereits vorhandenen Omneka Instanzen aus dem Ordner \npublic\n!\nDas sind alle Verzeichnisse unter \npublic\n au\u00dfer diesen:\n\n\n\n\njs\n\n\ncss\n\n\nfonts\n\n\nassets\n\n\npackages\n\n\n\n\nInstallation\n\u00b6\n\n\nKlonen Sie zun\u00e4chst das \nRepository\n f\u00fcr OMIM in eine \nleeres\n Verzeichnis auf Server.\n\n\n\n\nInstallation von Testservern\n\n\nBei der installation von Testservern, verwenden Sie bitte immer von beiden Repositorien die \ndevelop-Branch\n!\n\n\n\n\n\n\nVerzeichnis- und Dateirechte\n\n\nEs muss gew\u00e4hrleistet sein, dass der Benutzer bzw. die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat. Dazu sollten die Berechtigungen gesetzt sein, indem die \nGruppe\n gleich der prim\u00e4ren Gruppe von Apache / PHP ist (i.d.R. \nwww-data\n) und die Rechte f\u00fcr Verzeichnisse auf \n775\n und f\u00fcr Dateien auf \n664\n gesetzt sind.\n\n\n\n\nKlonen jetzt Sie das \nRepository\n direkt in den Unterordner \nlib\n.\nVerwenden sie dazu den Befehl \ngit clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master\n\num das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit \nlib/omeka\n).\nFalls Sie das Argument \n--branch master\n am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit \ngit checkout master\n.\n\n\n\n\nDer aktuelle Branch ist master\n\n\nBeachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten.\n\n\n\n\nBei einer \nUpgrade-Installation\n Verschieben oder kopieren Sie jetzt, die im vorigen Schritt gesicherten, Dateien und Ordner an Ihre jeweiligen Orte (\napp\\config\n, \ndata/rsa/\n, \npublic\n)!\n\n\nAchten Sie darauf, dass in der Apache Serverkonfiguration das \nDOCUMENT_ROOT\n von der Dom\u00e4ne auf das \npublic\n Verzeichnis zeigt.\n\n\nKonfiguration\n\u00b6\n\n\nWenn Sie eine Upgrade Installation durchf\u00fchren, brauchen Sie die Konfigurationsdateien nicht weiter anzupassen, sondern nur aus der Sicherung zu \u00fcbernehmen.\n\n\nHier der f\u00fcr die Konfiguration relevanten Dateien:\n\n\n\n\n\n\napp\n\n\nconfig\n\n\napp.php\n\n\ndatabase.php\n\n\nmail.php\n\n\nomim.php\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nrsa\n\n\nddb_rsa\n\n\nddb_rsa.pub\n\n\n\n\n\n\n\n\n\n\npublic\n\n\n\n\n\n\napp/config/app.php\n\u00b6\n\n\nAllgemeine Konfiguration des OMIM\n\n\n\n\n'debug'\n\n\nStandardwert: \nfalse\n\n\nFalls \ntrue\n werden bei Fehlern des OMIM detaillierte Meldungen angezeigt\n\n\n\n\n\n\n'url'\n\n\nStandardwert: \n'http://redaktion.tld'\n\n\nHier bitte die URL des Redaktionsservers angeben\n\n\n\n\n\n\n\n\napp/config/database.php\n\u00b6\n\n\nDatenbankeinstellungen des \nRedaktionsservers\n\nRelevanter Konfigurationsabschnitt:\n\n\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n<?php\n\n\n    \n// ...\n\n\n    \n'connections'\n \n=>\n \narray\n(\n\n        \n'mysql'\n \n=>\n \narray\n(\n\n            \n'driver'\n    \n=>\n \n'mysql'\n,\n\n            \n'host'\n      \n=>\n \n'localhost'\n,\n\n            \n'unix_socket'\n \n=>\n \n'/tmp/mysql5.sock'\n,\n\n            \n'database'\n  \n=>\n \n'Name der Datenbank'\n,\n\n            \n'username'\n  \n=>\n \n'Benutzername'\n,\n\n            \n'password'\n  \n=>\n \n'Passwort'\n,\n\n            \n'charset'\n   \n=>\n \n'utf8'\n,\n\n            \n'collation'\n \n=>\n \n'utf8_unicode_ci'\n,\n\n            \n'prefix'\n    \n=>\n \n''\n,\n\n        \n),\n\n    \n),\n\n\n    \n// ...\n\n\n\n\n\n\n\n\n\nTragen Sie unter \ndatabase\n, \nusername\n und \npassword\n die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein (s.o. unter \"MySQL Datenbank\").\n\n\nPassen Sie ggf. den Pfad \nunix_socket\n zu der Unix Socket Datei an.\n\n\n\n\napp/config/mail.php\n\u00b6\n\n\nSollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein.\n\n\napp/config/omim.php\n\u00b6\n\n\nSpezifische Konfiguration f\u00fcr die OMIM Anwendung.\n\n\nVerwenden Sie als Vorlage die \nomim.sample.php\n\n\n\n\nAktualisierungen und neue Versionen von OMIM\n\n\nBeachten Sie, dass die Eintr\u00e4ge in der aktuellen omim.sample.php, unter dem Schl\u00fcssel\n\n\n'common' => 'db' => 'tables'\n mit ihrer Konfiguration \u00fcbereinstimmen m\u00fcssen!\n\n\n\n\nRelevanter Konfigurationsabschnitt f\u00fcr Development- und Remote-Server:\n\n\n 49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n<?php\n\n\n    \n// ...\n\n\n    \n'development'\n \n=>\n \narray\n(\n\n        \n'user'\n \n=>\n \narray\n(\n\n            \n'group'\n \n=>\n \n'www-data'\n\n        \n)\n\n    \n),\n\n\n    \n'remote'\n \n=>\n \narray\n(\n\n        \n0\n \n=>\n \narray\n(\n\n            \n'production'\n \n=>\n \narray\n(\n\n                \n'http'\n \n=>\n \narray\n(\n\n                    \n'url'\n \n=>\n \n'http://live.tld'\n\n                \n),\n\n                \n'ssh'\n \n=>\n \narray\n(\n\n                    \n'host'\n \n=>\n \n'live.tld'\n,\n\n                    \n'port'\n \n=>\n \n'22'\n,\n\n                    \n'username'\n \n=>\n \n'Benutzername f\u00fcr SSH'\n,\n\n                    \n'key'\n \n=>\n \n'/path/to/private/rsa/key/file'\n,\n\n                    \n'docroot'\n \n=>\n \n'/path/to/document_root/on/live/server'\n,\n\n                    \n'datadir'\n \n=>\n \n'/path/to/data/dir/on/live/server'\n,\n\n                    \n'group'\n \n=>\n \n'www-data'\n\n                \n),\n\n                    \n'db'\n \n=>\n \narray\n(\n\n                    \n'host'\n      \n=>\n \n'localhost'\n,\n\n                    \n'database'\n  \n=>\n \n'Name der Datenbank'\n,\n\n                    \n'username'\n  \n=>\n \n'Benutzername'\n,\n\n                    \n'password'\n  \n=>\n \n'Passwort'\n,\n\n                    \n'charset'\n   \n=>\n \n'utf8'\n,\n\n                    \n'collation'\n \n=>\n \n'utf8_unicode_ci'\n,\n\n                    \n'unix_socket'\n \n=>\n \n'/tmp/mysql5.sock'\n,\n\n                \n)\n\n            \n)\n\n        \n),\n\n        \n1\n \n=>\n \narray\n(\n\n            \n'production'\n \n=>\n \narray\n(\n\n                \n'http'\n \n=>\n \narray\n(\n\n                    \n'url'\n \n=>\n \n'http://live-two.tld'\n\n                \n),\n\n                \n'ssh'\n \n=>\n \narray\n(\n\n                    \n'host'\n \n=>\n \n'live-two.tld'\n,\n\n                    \n'port'\n \n=>\n \n'22'\n,\n\n                    \n'username'\n \n=>\n \n'Benutzername f\u00fcr SSH'\n,\n\n                    \n'key'\n \n=>\n \n'/path/to/private/rsa/key/file'\n,\n\n                    \n'docroot'\n \n=>\n \n'/path/to/document_root/on/live/server'\n,\n\n                    \n'datadir'\n \n=>\n \n'/path/to/data/dir/on/live/server'\n,\n\n                    \n'group'\n \n=>\n \n'www-data'\n\n                \n),\n\n                \n'db'\n \n=>\n \narray\n(\n\n                    \n'host'\n      \n=>\n \n'localhost'\n,\n\n                    \n'database'\n  \n=>\n \n'Name der Datenbank'\n,\n\n                    \n'username'\n  \n=>\n \n'Benutzername'\n,\n\n                    \n'password'\n  \n=>\n \n'Passwort'\n,\n\n                    \n'charset'\n   \n=>\n \n'utf8'\n,\n\n                    \n'collation'\n \n=>\n \n'utf8_unicode_ci'\n,\n\n                    \n'unix_socket'\n \n=>\n \n'/tmp/mysql5.sock'\n,\n\n                \n)\n\n            \n)\n\n        \n),\n\n    \n)\n\n\n    \n// ...\n\n\n\n\n\n\n\n\n\nTragen Sie unter \n['development']['user']['group']\n die Apache Benutzergruppe des Redaktionsservers ein.\n\n\nTragen Sie unter \n['remote']['n']['production']['http']['url']\n die URL des jeweiligen Ausspielungsservers ein.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['host']\n den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['port']\n den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['username']\n den Namen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['key']\n den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei, mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Es empfiehlt sich selbst einen neuen RSA-Key auf dem Redaktionsserver zu erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die \nauthorized_keys\n Datei des Benutzers (unter \nhome/benutzername/.ssh/authorized_keys\n) importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['docroot']\n den absoluten Pfad zu dem in der Apache-Konfiguration (Virtaul Host) festgelegten \nDOCUMENT_ROOT\n des Ausspielungsservers ein. Beachten sie, dass dieser zwingend auf das Verzeichnis \npublic\n des Ausspielungsservers zeigen muss (s.u.)\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['datadir']\n den absulten Pfad zu dem \ndata\n Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis \ndata\n des Ausspielungsservers zeigen muss.\n\n\nTragen Sie unter \n['remote']['n']['production']['ssh']['group']\n die Gruppe ein, unter der Apache / PHP auf dem Ausspielungsserver ausgef\u00fchrt wird.\n\n\nTragen Sie in den Unterschl\u00fcsseln von \n['remote']['n']['production']['db']\n die Datenbankangaben f\u00fcr den \nAusspielungsserver\n ein.\n\n\nTragen Sie unter \ndatabase\n, \nusername\n und \npassword\n die Angaben f\u00fcr die MySQL-Datenbank auf dem Ausspielungsserver ein (s.u. unter \"MySQL Datenbank\").\n\n\nPassen Sie ggf. den Pfad \nunix_socket\n zu der Unix Socket Datei an.\n\n\nBeachten Sie, dass diese Einstellungen in die Omeka-DB-INI-Dateien auf dem Ausspielungsserver \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den Ausspielungsserver bezieht.\n\n\n\n\n\n\n\n\ndata/rsa/ddb_rsa und data/rsa/ddb_rsa.pub\n\u00b6\n\n\nPrivate und \u00f6ffentliche Schl\u00fcsseldatei zur Verwendung f\u00fcr die Authentifizierung bei SSH-Verbindungen.\nBitte generieren Sie aus Sicherheitsgr\u00fcnden selbst ein Schl\u00fcsselpaar (s.o.).\n\n\npublic\n\u00b6\n\n\nDieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das \nDOCUMENT_ROOT\n der Dom\u00e4ne sein (s.o).\n\u00dcbernehmen Sie bei einer Upgrade-Installation alle Verzeichnisse von bereits angelegten Instanzen.\n\n\nKonvertieren vorhander Ausstellungen\n\u00b6\n\n\nUm bereits vorhandene Ausstellungen zu konvertieren, kopieren Sie aus \ndata/deploy.tar.gz\n die Dateien:\n\n\n\n\nfiles/layout/pagethumbnail/default-page-icon.jpg\n\n\nfiles/layout/pagethumbnail/default-summary-icon.jpg\n\n\nbootstrap.php\n\n\nindex.php\n\n\n\n\nin alle Verzeichnisse von Ausstellungs-Instanzen unter \npublic\n und ersetzen so alle alten Dateien.\n\n\nCronjobs\n\u00b6\n\n\nUm erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein.\n\n\nF\u00fcr den Cronjob finden Sie im OMIM die \ncron.php\n. Aktualisieren Sie Ihr Repository, falls die Datei auf Ihrem Server noch nicht vorhanden ist.\n\n\nSie k\u00f6nnen in der cron.php-Datei unter  \n$threshold = 1 * 24 * 60 * 60; // a day;\n die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis \npublic/downloads\n gel\u00f6scht.\n\n\nDamit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl \nphp -v\n eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl \nwhereis php\n. Die Ausgabe sollte i.d.R. den Pfad \n/usr/bin/php\n enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren: \n/usr/bin/php -v\n.\n\n\nRichten Sie Crontab (\ncrontab -e\n) ein. F\u00fcgen Sie eine Zeile hinzu mit:\n\n\n1\n0\n \n0\n * * * php /pfad/auf/server/zu/cron.php\n\n\n\n\nAlternativ setzen sie den vollen Pfad zur PHP-Executable:\n\n\n1\n0\n \n0\n * * * /usr/bin/php /pfad/auf/server/zu/cron.php\n\n\n\n\n\n\nIn dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern.\n\n\n\n\nLese- und Schreibrechte des Benutzers\n\n\nBeachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte \nf\u00fcr die Dateien im Verzeichnis \npublic/downloads\n haben muss! Sollte das nicht der Fall sein,\nkonfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt.",
            "title": "Redaktionsserver"
        },
        {
            "location": "/dev-srv/index.html#redaktionsserver",
            "text": "",
            "title": "Redaktionsserver"
        },
        {
            "location": "/dev-srv/index.html#mysql-datenbank",
            "text": "",
            "title": "MySQL Datenbank"
        },
        {
            "location": "/dev-srv/index.html#bei-updates",
            "text": "Die bereits existierende Datenabnk kann weiter verwendet werden.",
            "title": "Bei Updates"
        },
        {
            "location": "/dev-srv/index.html#erst-installation",
            "text": "Legen Sie bitte eine leere Datenbank mit der Kollation  utf8_unicode_ci  und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank.\nSie erhalten initial eine MySQL-Datenbank-Dump-Datei, die Sie  einmalig  auf dem Redaktionsserver in die von Ihnen erstellte Datenbank einlesen m\u00fcssen.",
            "title": "Erst-Installation"
        },
        {
            "location": "/dev-srv/index.html#dateien",
            "text": "",
            "title": "Dateien"
        },
        {
            "location": "/dev-srv/index.html#vorbereitung-bei-upgrade-auf-git-verion",
            "text": "Falls Sie ein Upgrade auf die Git-Version durchf\u00fchren, sichern Sie zun\u00e4chst alle Dateien aus dem Verzeichnis  app\\config  und die SSH-Schl\u00fcssel aus dem Verzeichnis  data/rsa/ , sowie die bereits vorhandenen Omneka Instanzen aus dem Ordner  public !\nDas sind alle Verzeichnisse unter  public  au\u00dfer diesen:   js  css  fonts  assets  packages",
            "title": "Vorbereitung bei Upgrade auf Git-Verion"
        },
        {
            "location": "/dev-srv/index.html#installation",
            "text": "Klonen Sie zun\u00e4chst das  Repository  f\u00fcr OMIM in eine  leeres  Verzeichnis auf Server.   Installation von Testservern  Bei der installation von Testservern, verwenden Sie bitte immer von beiden Repositorien die  develop-Branch !    Verzeichnis- und Dateirechte  Es muss gew\u00e4hrleistet sein, dass der Benutzer bzw. die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien hat. Dazu sollten die Berechtigungen gesetzt sein, indem die  Gruppe  gleich der prim\u00e4ren Gruppe von Apache / PHP ist (i.d.R.  www-data ) und die Rechte f\u00fcr Verzeichnisse auf  775  und f\u00fcr Dateien auf  664  gesetzt sind.   Klonen jetzt Sie das  Repository  direkt in den Unterordner  lib .\nVerwenden sie dazu den Befehl  git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master \num das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit  lib/omeka ).\nFalls Sie das Argument  --branch master  am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit  git checkout master .   Der aktuelle Branch ist master  Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten.   Bei einer  Upgrade-Installation  Verschieben oder kopieren Sie jetzt, die im vorigen Schritt gesicherten, Dateien und Ordner an Ihre jeweiligen Orte ( app\\config ,  data/rsa/ ,  public )!  Achten Sie darauf, dass in der Apache Serverkonfiguration das  DOCUMENT_ROOT  von der Dom\u00e4ne auf das  public  Verzeichnis zeigt.",
            "title": "Installation"
        },
        {
            "location": "/dev-srv/index.html#konfiguration",
            "text": "Wenn Sie eine Upgrade Installation durchf\u00fchren, brauchen Sie die Konfigurationsdateien nicht weiter anzupassen, sondern nur aus der Sicherung zu \u00fcbernehmen.  Hier der f\u00fcr die Konfiguration relevanten Dateien:    app  config  app.php  database.php  mail.php  omim.php      data  rsa  ddb_rsa  ddb_rsa.pub      public",
            "title": "Konfiguration"
        },
        {
            "location": "/dev-srv/index.html#appconfigappphp",
            "text": "Allgemeine Konfiguration des OMIM   'debug'  Standardwert:  false  Falls  true  werden bei Fehlern des OMIM detaillierte Meldungen angezeigt    'url'  Standardwert:  'http://redaktion.tld'  Hier bitte die URL des Redaktionsservers angeben",
            "title": "app/config/app.php"
        },
        {
            "location": "/dev-srv/index.html#appconfigdatabasephp",
            "text": "Datenbankeinstellungen des  Redaktionsservers \nRelevanter Konfigurationsabschnitt:  43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61 <?php \n\n     // ... \n\n     'connections'   =>   array ( \n         'mysql'   =>   array ( \n             'driver'      =>   'mysql' , \n             'host'        =>   'localhost' , \n             'unix_socket'   =>   '/tmp/mysql5.sock' , \n             'database'    =>   'Name der Datenbank' , \n             'username'    =>   'Benutzername' , \n             'password'    =>   'Passwort' , \n             'charset'     =>   'utf8' , \n             'collation'   =>   'utf8_unicode_ci' , \n             'prefix'      =>   '' , \n         ), \n     ), \n\n     // ...     Tragen Sie unter  database ,  username  und  password  die Angaben f\u00fcr die MySQL-Datenbank auf dem Redaktionsserver ein (s.o. unter \"MySQL Datenbank\").  Passen Sie ggf. den Pfad  unix_socket  zu der Unix Socket Datei an.",
            "title": "app/config/database.php"
        },
        {
            "location": "/dev-srv/index.html#appconfigmailphp",
            "text": "Sollten Sie w\u00fcnschen, dass OMIM E-Mails versenden kann, tragen Sie hier bitte die entsprechenden Werte ein.",
            "title": "app/config/mail.php"
        },
        {
            "location": "/dev-srv/index.html#appconfigomimphp",
            "text": "Spezifische Konfiguration f\u00fcr die OMIM Anwendung.  Verwenden Sie als Vorlage die  omim.sample.php   Aktualisierungen und neue Versionen von OMIM  Beachten Sie, dass die Eintr\u00e4ge in der aktuellen omim.sample.php, unter dem Schl\u00fcssel  'common' => 'db' => 'tables'  mit ihrer Konfiguration \u00fcbereinstimmen m\u00fcssen!   Relevanter Konfigurationsabschnitt f\u00fcr Development- und Remote-Server:   49\n 50\n 51\n 52\n 53\n 54\n 55\n 56\n 57\n 58\n 59\n 60\n 61\n 62\n 63\n 64\n 65\n 66\n 67\n 68\n 69\n 70\n 71\n 72\n 73\n 74\n 75\n 76\n 77\n 78\n 79\n 80\n 81\n 82\n 83\n 84\n 85\n 86\n 87\n 88\n 89\n 90\n 91\n 92\n 93\n 94\n 95\n 96\n 97\n 98\n 99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112 <?php \n\n     // ... \n\n     'development'   =>   array ( \n         'user'   =>   array ( \n             'group'   =>   'www-data' \n         ) \n     ), \n\n     'remote'   =>   array ( \n         0   =>   array ( \n             'production'   =>   array ( \n                 'http'   =>   array ( \n                     'url'   =>   'http://live.tld' \n                 ), \n                 'ssh'   =>   array ( \n                     'host'   =>   'live.tld' , \n                     'port'   =>   '22' , \n                     'username'   =>   'Benutzername f\u00fcr SSH' , \n                     'key'   =>   '/path/to/private/rsa/key/file' , \n                     'docroot'   =>   '/path/to/document_root/on/live/server' , \n                     'datadir'   =>   '/path/to/data/dir/on/live/server' , \n                     'group'   =>   'www-data' \n                 ), \n                     'db'   =>   array ( \n                     'host'        =>   'localhost' , \n                     'database'    =>   'Name der Datenbank' , \n                     'username'    =>   'Benutzername' , \n                     'password'    =>   'Passwort' , \n                     'charset'     =>   'utf8' , \n                     'collation'   =>   'utf8_unicode_ci' , \n                     'unix_socket'   =>   '/tmp/mysql5.sock' , \n                 ) \n             ) \n         ), \n         1   =>   array ( \n             'production'   =>   array ( \n                 'http'   =>   array ( \n                     'url'   =>   'http://live-two.tld' \n                 ), \n                 'ssh'   =>   array ( \n                     'host'   =>   'live-two.tld' , \n                     'port'   =>   '22' , \n                     'username'   =>   'Benutzername f\u00fcr SSH' , \n                     'key'   =>   '/path/to/private/rsa/key/file' , \n                     'docroot'   =>   '/path/to/document_root/on/live/server' , \n                     'datadir'   =>   '/path/to/data/dir/on/live/server' , \n                     'group'   =>   'www-data' \n                 ), \n                 'db'   =>   array ( \n                     'host'        =>   'localhost' , \n                     'database'    =>   'Name der Datenbank' , \n                     'username'    =>   'Benutzername' , \n                     'password'    =>   'Passwort' , \n                     'charset'     =>   'utf8' , \n                     'collation'   =>   'utf8_unicode_ci' , \n                     'unix_socket'   =>   '/tmp/mysql5.sock' , \n                 ) \n             ) \n         ), \n     ) \n\n     // ...     Tragen Sie unter  ['development']['user']['group']  die Apache Benutzergruppe des Redaktionsservers ein.  Tragen Sie unter  ['remote']['n']['production']['http']['url']  die URL des jeweiligen Ausspielungsservers ein.  Tragen Sie unter  ['remote']['n']['production']['ssh']['host']  den Hostnamen oder die IP-Adresse des jeweiligen Ausspielungsservers ein.  Tragen Sie unter  ['remote']['n']['production']['ssh']['port']  den SSH Port ein, \u00fcber den der Ausspielungsserver per SSH erreichbar ist.  Tragen Sie unter  ['remote']['n']['production']['ssh']['username']  den Namen des Benutzers, der sich per SSH mit dem jeweiligen Ausspielungsserver verbinden soll, ein.  Tragen Sie unter  ['remote']['n']['production']['ssh']['key']  den absoluten Dateipfad zu der privaten Schl\u00fcsseldatei, mit dem sich der Benutzer am Redaktionsserver anmeldet, ein. Es empfiehlt sich selbst einen neuen RSA-Key auf dem Redaktionsserver zu erzeugen. Sie m\u00fcssen dann den \u00f6ffentlichen Schl\u00fcssel auf dem Ausspielungsserver in die  authorized_keys  Datei des Benutzers (unter  home/benutzername/.ssh/authorized_keys ) importieren. Achten Sie darauf, dass der Schl\u00fcssel selbst nicht durch eine Passphrase gesch\u00fctzt sein darf, da die Server-zu-Server Anmeldung sonst nicht automatisiert ablaufen kann. Vergewissern sie sich ggf. auch, dass die Schl\u00fcsseldatei dem entsprechenden Benutzer (und der Gruppe) geh\u00f6rt und \u00e4ndern Sie ggf. die Zugriffsrechte.  Tragen Sie unter  ['remote']['n']['production']['ssh']['docroot']  den absoluten Pfad zu dem in der Apache-Konfiguration (Virtaul Host) festgelegten  DOCUMENT_ROOT  des Ausspielungsservers ein. Beachten sie, dass dieser zwingend auf das Verzeichnis  public  des Ausspielungsservers zeigen muss (s.u.)  Tragen Sie unter  ['remote']['n']['production']['ssh']['datadir']  den absulten Pfad zu dem  data  Verzeichnis des Ausspielungsservers ein. Beachten Sie, dass dieser zwingend auf das Verzeichnis  data  des Ausspielungsservers zeigen muss.  Tragen Sie unter  ['remote']['n']['production']['ssh']['group']  die Gruppe ein, unter der Apache / PHP auf dem Ausspielungsserver ausgef\u00fchrt wird.  Tragen Sie in den Unterschl\u00fcsseln von  ['remote']['n']['production']['db']  die Datenbankangaben f\u00fcr den  Ausspielungsserver  ein.  Tragen Sie unter  database ,  username  und  password  die Angaben f\u00fcr die MySQL-Datenbank auf dem Ausspielungsserver ein (s.u. unter \"MySQL Datenbank\").  Passen Sie ggf. den Pfad  unix_socket  zu der Unix Socket Datei an.  Beachten Sie, dass diese Einstellungen in die Omeka-DB-INI-Dateien auf dem Ausspielungsserver \u00fcbernommen werden. Das bedeutet, dass sich z.B. die Angabe 'localhost' auf den Ausspielungsserver bezieht.",
            "title": "app/config/omim.php"
        },
        {
            "location": "/dev-srv/index.html#datarsaddb95rsa-und-datarsaddb95rsapub",
            "text": "Private und \u00f6ffentliche Schl\u00fcsseldatei zur Verwendung f\u00fcr die Authentifizierung bei SSH-Verbindungen.\nBitte generieren Sie aus Sicherheitsgr\u00fcnden selbst ein Schl\u00fcsselpaar (s.o.).",
            "title": "data/rsa/ddb_rsa und data/rsa/ddb_rsa.pub"
        },
        {
            "location": "/dev-srv/index.html#public",
            "text": "Dieses Verzeichnis muss in der Apache-Konfiguration des Redaktionsservers das  DOCUMENT_ROOT  der Dom\u00e4ne sein (s.o).\n\u00dcbernehmen Sie bei einer Upgrade-Installation alle Verzeichnisse von bereits angelegten Instanzen.",
            "title": "public"
        },
        {
            "location": "/dev-srv/index.html#konvertieren-vorhander-ausstellungen",
            "text": "Um bereits vorhandene Ausstellungen zu konvertieren, kopieren Sie aus  data/deploy.tar.gz  die Dateien:   files/layout/pagethumbnail/default-page-icon.jpg  files/layout/pagethumbnail/default-summary-icon.jpg  bootstrap.php  index.php   in alle Verzeichnisse von Ausstellungs-Instanzen unter  public  und ersetzen so alle alten Dateien.",
            "title": "Konvertieren vorhander Ausstellungen"
        },
        {
            "location": "/dev-srv/index.html#cronjobs",
            "text": "Um erzeugte Download-Dateien regelm\u00e4\u00dfig automatisch l\u00f6schen zu lassen, richten Sie einen Cronjob ein.  F\u00fcr den Cronjob finden Sie im OMIM die  cron.php . Aktualisieren Sie Ihr Repository, falls die Datei auf Ihrem Server noch nicht vorhanden ist.  Sie k\u00f6nnen in der cron.php-Datei unter   $threshold = 1 * 24 * 60 * 60; // a day;  die Zeit in Sekunden einstellen, die bestimmt, wie alt die Dateien maximal sein d\u00fcrfen, um nicht gel\u00f6scht zu werden. Standardm\u00e4\u00dfig steht der Wert auf einem Tag, d.h. alle Dateien, die \u00e4lter als ein Tag sind, werden, bei Aufruf der cron.php, aus dem Verzeichnis  public/downloads  gel\u00f6scht.  Damit die cron.php als Cronjpb ausgef\u00fchrt werden kann, muss auf dem Server php-cli >= v.5.x installiert sein. Das sollte i.d.R. der Fall sein. \u00dcberpr\u00fcfen Sie das, indem Sie auf der Kommandozeile den Befehl  php -v  eingeben. Sollte php nicht im Pfad stehen, suchen Sie php mit dem Befehl  whereis php . Die Ausgabe sollte i.d.R. den Pfad  /usr/bin/php  enthalten. F\u00fcr diesen Pfad sollte der Versionstest entsprechend funktionieren:  /usr/bin/php -v .  Richten Sie Crontab ( crontab -e ) ein. F\u00fcgen Sie eine Zeile hinzu mit:  1 0   0  * * * php /pfad/auf/server/zu/cron.php  \nAlternativ setzen sie den vollen Pfad zur PHP-Executable:  1 0   0  * * * /usr/bin/php /pfad/auf/server/zu/cron.php   In dem Beispiel wird der Job einmal t\u00e4glich ausgef\u00fchrt. Sie k\u00f6nnen die Frequenz nat\u00fcrlich \u00e4ndern.   Lese- und Schreibrechte des Benutzers  Beachten Sie, dass der Benutzer, der den Cronjob ausf\u00fchrt, Lese- und Schreibrechte \nf\u00fcr die Dateien im Verzeichnis  public/downloads  haben muss! Sollte das nicht der Fall sein,\nkonfigurieren Sie den Cronjob in einem Benutzerkontext, der \u00fcber entsprechende Rechte verf\u00fcgt.",
            "title": "Cronjobs"
        },
        {
            "location": "/prod-srv/index.html",
            "text": "Ausspielungsserver\n\u00b6\n\n\nMySQL Datenbank\n\u00b6\n\n\nBei Updates\n\u00b6\n\n\nDie bereits existierende Datenabnk kann weiter verwendet werden.\n\n\nErst-Installation\n\u00b6\n\n\nLegen Sie bitte eine leere Datenbank mit der Kollation \nutf8_unicode_ci\n und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank.\nDie Datenbank bleibt leer und wird bei der Aktion \"Ver\u00f6ffentlichen\" des OMIM vom Redaktionsserver aus mit Daten bef\u00fcllt.\n\n\nDateien\n\u00b6\n\n\nBei Updates\n\u00b6\n\n\nErstellen Sie eine Kopie von allen Unterordnern von \npublic\n.\n\n\nInstallation und Konfiguration\n\u00b6\n\n\nErstellen Sie in einem leeren Ordner drei Unterordner:\n\n\n\n\ndata\n\n\nlib\n\n\npublic\n\n\n\n\nSpeichern Sie aus der \nRepository des DDB Virtual-Exhibitions-Manager\n die Dateien \n.htaccees\n und \ndeploy.tar.gz\n. (Sie konnen die ganze Repository als ZIP herunter laden und die Dateien dann aus dem Ordner \nddb-virtualexhibitions-manager/data/production/\n extrahieren.). Speichern Sie dabei die Datei \n.htaccees\n im Ordner \npublic\n und die Datei \ndeploy.tar.gz\n im Ordner \ndata\n.\n\n\n\n\nRepository f\u00fcr Repository des DDB Virtual-Exhibitions-Manager nicht klonen!\n\n\nBitte klonen Sie auf Ausspielungsservern das Repository des DDB Virtual-Exhibitions-Manager \nnicht\n in das Stammverzeichnis!\nDie zwei Dateien aus dem Repository m\u00fcssen nur einmalig per Hand kopiert werden. Sp\u00e4ter werden beim Ver\u00f6ffentlichen die Dateien ggf. automatisch erstzt.\n\n\n\n\nKlonen jetzt Sie das \nRepository\n direkt in den Unterordner \nlib\n.\nVerwenden sie dazu den Befehl \ngit clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master\n\num das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit \nlib/omeka\n).\nFalls Sie das Argument \n--branch master\n am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit \ngit checkout master\n.\n\n\n\n\nDer aktuelle Branch ist master\n\n\nBeachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten.\n\n\n\n\n\n\nInstallation von Testservern\n\n\nBei der installation von Testservern, verwenden Sie bitte immer die \ndevelop-Branch\n!\n\n\n\n\n\n\nVerzeichnis- und Dateirechte\n\n\nEs muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben.\nSetzen Sie dazu den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache / PHP (i.d.R. www-data) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664.\n\n\n\n\nFalls Sie ein Update vornehmen kopieren Sie die gesicherten Unterordner von \npublic\n wieder dort hin.\n\n\nDas Verzeichnis \npublic\n muss in der Apache-Konfiguration des Servers das \nDOCUMENT_ROOT\n der Dom\u00e4ne sein.\n\n\nDenken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die \nauthorized_keys\n Datei einzutragen.",
            "title": "Ausspielungsserver"
        },
        {
            "location": "/prod-srv/index.html#ausspielungsserver",
            "text": "",
            "title": "Ausspielungsserver"
        },
        {
            "location": "/prod-srv/index.html#mysql-datenbank",
            "text": "",
            "title": "MySQL Datenbank"
        },
        {
            "location": "/prod-srv/index.html#bei-updates",
            "text": "Die bereits existierende Datenabnk kann weiter verwendet werden.",
            "title": "Bei Updates"
        },
        {
            "location": "/prod-srv/index.html#erst-installation",
            "text": "Legen Sie bitte eine leere Datenbank mit der Kollation  utf8_unicode_ci  und einen MySQL Benutzer an. Gew\u00e4hren Sie dem MySQL Benutzer alle Rechte auf die Datenbank.\nDie Datenbank bleibt leer und wird bei der Aktion \"Ver\u00f6ffentlichen\" des OMIM vom Redaktionsserver aus mit Daten bef\u00fcllt.",
            "title": "Erst-Installation"
        },
        {
            "location": "/prod-srv/index.html#dateien",
            "text": "",
            "title": "Dateien"
        },
        {
            "location": "/prod-srv/index.html#bei-updates_1",
            "text": "Erstellen Sie eine Kopie von allen Unterordnern von  public .",
            "title": "Bei Updates"
        },
        {
            "location": "/prod-srv/index.html#installation-und-konfiguration",
            "text": "Erstellen Sie in einem leeren Ordner drei Unterordner:   data  lib  public   Speichern Sie aus der  Repository des DDB Virtual-Exhibitions-Manager  die Dateien  .htaccees  und  deploy.tar.gz . (Sie konnen die ganze Repository als ZIP herunter laden und die Dateien dann aus dem Ordner  ddb-virtualexhibitions-manager/data/production/  extrahieren.). Speichern Sie dabei die Datei  .htaccees  im Ordner  public  und die Datei  deploy.tar.gz  im Ordner  data .   Repository f\u00fcr Repository des DDB Virtual-Exhibitions-Manager nicht klonen!  Bitte klonen Sie auf Ausspielungsservern das Repository des DDB Virtual-Exhibitions-Manager  nicht  in das Stammverzeichnis!\nDie zwei Dateien aus dem Repository m\u00fcssen nur einmalig per Hand kopiert werden. Sp\u00e4ter werden beim Ver\u00f6ffentlichen die Dateien ggf. automatisch erstzt.   Klonen jetzt Sie das  Repository  direkt in den Unterordner  lib .\nVerwenden sie dazu den Befehl  git clone https://github.com/Deutsche-Digitale-Bibliothek/ddb-virtualexhibitions.git . --branch master \num das Repositorium direkt in den Ordner zu klonen (es muss am Ende ein Pfad exisiteren mit  lib/omeka ).\nFalls Sie das Argument  --branch master  am Ende weggelassen haben und Sie noch nicht im master Branch sind, wechseln Sie jetzt in den Branch master mit  git checkout master .   Der aktuelle Branch ist master  Beachten Sie, dass Sie bis auf Weiteres immer nur mit der master Branch arbeiten. Nur dort sind die Dateien f\u00fcr die stabilen Releases enthalten.    Installation von Testservern  Bei der installation von Testservern, verwenden Sie bitte immer die  develop-Branch !    Verzeichnis- und Dateirechte  Es muss gew\u00e4hrleistet sein, dass einerseits der Benutzer, mit dessen Konto sich der Redaktionsserver per SSH verbindet und andererseits die Gruppe, unter der Apache / PHP auf dem Server ausgef\u00fchrt wird, Lese- und Schreibzugriff auf alle erstellten Verzeichnisse und Dateien haben.\nSetzen Sie dazu den Benutzer f\u00fcr alle betreffenden Verzeichnisse und Dateien auf den SSH-Benutzer und die Gruppe auf die Gruppe von Apache / PHP (i.d.R. www-data) und die Rechte f\u00fcr Verzeichnisse auf 775 und f\u00fcr Dateien auf 664.   Falls Sie ein Update vornehmen kopieren Sie die gesicherten Unterordner von  public  wieder dort hin.  Das Verzeichnis  public  muss in der Apache-Konfiguration des Servers das  DOCUMENT_ROOT  der Dom\u00e4ne sein.  Denken Sie daran, den \u00f6ffentlichen Schl\u00fcssel des SSH Benutzers vom Redaktionsserver in die  authorized_keys  Datei einzutragen.",
            "title": "Installation und Konfiguration"
        },
        {
            "location": "/updates/index.html",
            "text": "Aktualisierungen\n\u00b6\n\n\nAktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories.\nBei Updates von OMIM \u00fcber dieses \nRepository\n auf der \n\"master\"\n-Branch.\nBei Updates von Omeka \u00fcber dieses \nRepository\n auf der \n\"master\"\n-Branch.\n\n\n\n\nAktualisierungen von Testservern\n\n\nBei der Aktualisierungen von Testservern, verwenden Sie bitte immer die \ndevelop-Branch\n!\n\n\n\n\nBei Updates die lokalen Repositories dann entsprechend mit \ngit pull\n aktualisieren.\n\n\nSprachdateien Cache\n\u00b6\n\n\nOmeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an.\nDieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden.\n\n\nDie Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig \n/tmp\n sein sollte.\nDie Dateinamen fangen immer mit der Zeichenfolge \nomeka_i18n_cache---\n an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen.\nSie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.",
            "title": "Aktualisierungen"
        },
        {
            "location": "/updates/index.html#aktualisierungen",
            "text": "Aktualisierungen erhalten alle Server \u00fcber die GitHub-Repositories.\nBei Updates von OMIM \u00fcber dieses  Repository  auf der  \"master\" -Branch.\nBei Updates von Omeka \u00fcber dieses  Repository  auf der  \"master\" -Branch.   Aktualisierungen von Testservern  Bei der Aktualisierungen von Testservern, verwenden Sie bitte immer die  develop-Branch !   Bei Updates die lokalen Repositories dann entsprechend mit  git pull  aktualisieren.",
            "title": "Aktualisierungen"
        },
        {
            "location": "/updates/index.html#sprachdateien-cache",
            "text": "Omeka (bzw. die Zend Framework Komponente) legt f\u00fcr die verwendeten Sprachdateien bzw. \u00dcbersetzungen einen Cache auf dem Server an.\nDieser muss nach Updates von Omeka vom Server gel\u00f6scht werden, da sonst \u00c4nderungen in den Sprachdateien nicht (gleich) wirksam werden.  Die Dateien liegen in dem Standard-Temp-Verzeichnis des Servers, was standardm\u00e4\u00dfig  /tmp  sein sollte.\nDie Dateinamen fangen immer mit der Zeichenfolge  omeka_i18n_cache---  an. Diese Dateien bitte auf allen Server nach jedem Omeka Update bitte einfach l\u00f6schen.\nSie werden beim n\u00e4chsten Seitenaufruf automatisch wieder neu erstellt.",
            "title": "Sprachdateien Cache"
        },
        {
            "location": "/config/index.html",
            "text": "Konfiguration\n\u00b6\n\n\nEs k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden.\n\n\nDDB Video-Quellen\n\u00b6\n\n\nIn der Datei \n\n\nddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php\n\n\nk\u00f6nnen die Schl\u00fcssel der Eigenschaft \n$config\n ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden:\n\n\n\n\nddbXmlSrv\n Server mit XML Daten\n\n\nddbIIFResHelperSrvPrefix\n Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen\n\n\nddbIIIFSrvPrefix\n IIIF Server mit Bilddateien\n\n\nddbVideoSrvPrefix\n Server mit Videodateien\n\n\n\n\nLizenz-Shortcodes\n\u00b6\n\n\nIn der Datei \n\n\nddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php\n\n\nin der Methode \ngetLicenseFromShortcode\n k\u00f6nnen in der Variable \n$licenses\n die Lizenz-Shortcodes angepasst werden.\n\n\nDer Aufbau der jeweiligen Eintr\u00e4ge ist:\n\n'SHORTCODE' => array(\n    'name' => 'Name der Lizenz',\n    'link' => 'URL zu der Lizenzdefinition',\n    'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons'\n)\n\n\n\n\n\nBeim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden.\n\nHTML Format f\u00fcr Icons:\n\n\n<i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i>\n\n\n\n\n\nDie Grafikdatei f\u00fcr die Icons befindet sich unter:\n\n\n<root-der-installation>/lib/omeka/themes/ddb/images/licenses.png\n\n\nCSS-Definitionen sind in der Datei:\n\n\n<root-der-installation>/lib/omeka/themes/ddb/css/style.css\n\n\nDefinierte CSS-Class-Selektoren:\n\n\n\n\n.license-by\n\n\n.license-nd\n\n\n.license-nc\n\n\n.license-sa\n\n\n.license-pd\n\n\n.license-pdzero\n\n\n.license-rr\n\n\n.license-or\n\n\n.license-vw\n\n\n\n\nDDB Basis-URL\n\u00b6\n\n\nZur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable \n$ddbBaseDomain\n in den Dateien \n\n\n\n\nddb-virtualexhibitions/omeka/themes/ddb/common/header.php\n\n\nddb-virtualexhibitions/omeka/themes/ddb/common/footer.php\n\n\n\n\nangepasst werden.",
            "title": "Konfiguration"
        },
        {
            "location": "/config/index.html#konfiguration",
            "text": "Es k\u00f6nnen in den Skriptdateien verschiedene Konfigurationen vorgenommen werden.",
            "title": "Konfiguration"
        },
        {
            "location": "/config/index.html#ddb-video-quellen",
            "text": "In der Datei   ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php  k\u00f6nnen die Schl\u00fcssel der Eigenschaft  $config  ge\u00e4ndert werden, um die Videoquellen der DDB festzulegen. Folgende Schl\u00fcssel k\u00f6nnen angepasst werden:   ddbXmlSrv  Server mit XML Daten  ddbIIFResHelperSrvPrefix  Server mit JSON Daten f\u00fcr Videobildgr\u00f6\u00dfen  ddbIIIFSrvPrefix  IIIF Server mit Bilddateien  ddbVideoSrvPrefix  Server mit Videodateien",
            "title": "DDB Video-Quellen"
        },
        {
            "location": "/config/index.html#lizenz-shortcodes",
            "text": "In der Datei   ddb-virtualexhibitions/omeka/plugins/ExhibitBuilder/helpers/ExhibitDdbHelper.php  in der Methode  getLicenseFromShortcode  k\u00f6nnen in der Variable  $licenses  die Lizenz-Shortcodes angepasst werden.  Der Aufbau der jeweiligen Eintr\u00e4ge ist: 'SHORTCODE' => array(\n    'name' => 'Name der Lizenz',\n    'link' => 'URL zu der Lizenzdefinition',\n    'icon' => 'HTML Markup f\u00fcr die Ausgabe von Icons'\n)   Beim Schl\u00fcssel icon k\u00f6nnen mehrere Icons angegeben werden. \nHTML Format f\u00fcr Icons:  <i class=\"license CSS-KLASSE-DES-JEWEILGEN-ICONS\"> </i>  Die Grafikdatei f\u00fcr die Icons befindet sich unter:  <root-der-installation>/lib/omeka/themes/ddb/images/licenses.png  CSS-Definitionen sind in der Datei:  <root-der-installation>/lib/omeka/themes/ddb/css/style.css  Definierte CSS-Class-Selektoren:   .license-by  .license-nd  .license-nc  .license-sa  .license-pd  .license-pdzero  .license-rr  .license-or  .license-vw",
            "title": "Lizenz-Shortcodes"
        },
        {
            "location": "/config/index.html#ddb-basis-url",
            "text": "Zur Verlinkung mit der DDB in der Top-Navigation und im Footer kann die Variable  $ddbBaseDomain  in den Dateien    ddb-virtualexhibitions/omeka/themes/ddb/common/header.php  ddb-virtualexhibitions/omeka/themes/ddb/common/footer.php   angepasst werden.",
            "title": "DDB Basis-URL"
        }
    ]
}